/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/admin/attached-companies': {
    /** Get attached companies */
    get: operations['getAttachedCompanies'];
  };
  '/admin/attached-company/{companyId}': {
    /** Attach company to the user */
    delete: operations['removeAttachedCompany'];
    /** Attach company to the user */
    post: operations['attachCompany'];
  };
  '/admin/companies': {
    /** Get all companies registered in TOS */
    get: operations['getAllCompanies'];
  };
  '/company/previous-companies': {
    /** Get the list of previous company names and ids */
    get: operations['getPreviousCompanies'];
  };
  '/company/{companyId}': {
    /** Get company basic details */
    get: operations['getCompany'];
  };
  '/company/{companyId}/account-details': {
    /** Get the company account details */
    get: operations['getCompanyAccountDetails'];
  };
  '/company/{companyId}/create-order/{orderId}': {
    /** Get the order workflow data for the id */
    get: operations['getOrderWorkflowStatus'];
  };
  '/company/{companyId}/create-payment/new': {
    /** Get a new payment workflow id */
    get: operations['getNewPaymentWorkflowId'];
  };
  '/company/{companyId}/create-payment/{paymentId}': {
    /** Get the payment workflow data for the id */
    get: operations['getPaymentWorkflowStatus'];
  };
  '/company/{companyId}/create-payment/{paymentId}/confirmation': {
    /** Get the final confirmation form data */
    get: operations['getPaymentsConfirmationFormInit'];
    /** Submit confirmation form values */
    post: operations['postPaymentsConfirmationForm'];
  };
  '/company/{companyId}/create-payment/{paymentId}/customer-contact': {
    /** Get the customer contact form along with already submitted form entries */
    get: operations['getPaymentsCustomerContactFormInit'];
    /** Submit customer contact form values */
    post: operations['postPaymentsCustomerContactForm'];
  };
  '/company/{companyId}/create-payment/{paymentId}/customer-information': {
    /** Get the customer information form along with already submitted form entries */
    get: operations['getPaymentsCustomerInformationFormInit'];
    /** Submit customer information form values */
    post: operations['postPaymentsCustomerInformationForm'];
  };
  '/company/{companyId}/create-payment/{paymentId}/payment-details': {
    /** Get the payment details form along with already submitted form entries */
    get: operations['getPaymentsPaymentDetailsFormInit'];
    /** Submit payment details form values */
    post: operations['postPaymentsPaymentDetailsForm'];
  };
  '/company/{companyId}/payment/{requestId}': {
    /** Delete the payment request */
    delete: operations['deletePaymentRequest'];
    /** Get the payment request details */
    get: operations['getPaymentRequest'];
  };
  '/company/{companyId}/payments/balances': {
    /** Get the account payment balances */
    get: operations['getPaymentBalances'];
  };
  '/company/{companyId}/payments/list': {
    /** Get the payments list */
    get: operations['getPaymentsList'];
  };
  '/company/{companyId}/create-payment/{paymentId}/upload-documents': {
    /** Get the upload documents form along with already submitted form entries */
    get: operations['getPaymentsUploadDocumentsFormInit'];
    /** Submit upload documents form values */
    post: operations['postPaymentsUploadDocumentsForm'];
  };
  '/file-download/{id}': {
    /** Get a download url for the upload id provided */
    get: operations['getDownloadLink'];
  };
  '/file-upload': {
    /** Get a file upload id and link */
    post: operations['getFileUploadInfo'];
  };
  '/kyc/new': {
    /** Get a new kyc company id */
    get: operations['getNewKycCompanyId'];
  };
  '/kyc/virtual-iban': {
    /** Get the virtual iban data from Walbing api */
    get: operations['getKycVirtualIban'];
  };
  '/kyc/{companyId}': {
    /** Get the status of the kyc flow */
    get: operations['getKycWorkflowStatus'];
  };
  '/kyc/{companyId}/bank-account': {
    /** Get the bank account form along with already submitted form entries */
    get: operations['getKycBankAccountFormInit'];
    /** Submit bank account form values */
    post: operations['postKycBankAccountForm'];
  };
  '/kyc/{companyId}/beneficial-owners': {
    /** Get the beneficial owners form along with already submitted form entries */
    get: operations['getKycBeneficialOwnersFormInit'];
    /** Submit beneficial owners form values */
    post: operations['postKycBeneficialOwnersForm'];
  };
  '/kyc/{companyId}/business-data': {
    /** Get the business data form along with already submitted form entries */
    get: operations['getKycBusinessDataFormInit'];
    /** Submit business data form values */
    post: operations['postKycBusinessDataForm'];
  };
  '/kyc/{companyId}/legal-representatives': {
    /** Get the legal representatives form along with already submitted form entries */
    get: operations['getKycLegalRepresentativesFormInit'];
    /** Submit legal representatives form values */
    post: operations['postKycLegalRepresentativesForm'];
  };
  '/ref-data/company-names': {
    /** Get the list of company names and ids */
    get: operations['getCompanyNames'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  headers: never;
  parameters: never;
  pathItems: never;
  requestBodies: never;
  responses: never;
  schemas: {
    /**
     * @example [
     *   {
     *     "attachedUntil": "2023-04-30T00:00:00.000Z",
     *     "role": "support_admin"
     *   }
     * ]
     */
    AttachRequestData: {
      attachedUntil: string;
      /** @enum {string} */
      role: 'beneficial_owner' | 'driver' | 'finance' | 'legal_representative' | 'support_admin';
    };
    /**
     * @example {
     *   "companyId": "company1",
     *   "companyName": "Monster AG",
     *   "attachedUntil": "2023-04-30T00:00:00.000Z",
     *   "role": "support_admin"
     * }
     */
    AttachedCompany: {
      attachedUntil: string;
      companyId: string;
      companyName: string;
      /** @enum {string} */
      role: 'beneficial_owner' | 'driver' | 'finance' | 'legal_representative' | 'support_admin';
    };
    /**
     * @example {
     *   "companyId": "company1",
     *   "companyName": "Monster AG",
     *   "creditWorthness": "low",
     *   "details": {
     *     "companyType": "SimpleCompany",
     *     "commercialRegisterNumber": "HRA162345",
     *     "country": "DE",
     *     "legalForm": "DE0001",
     *     "registrationAuthority": "RADE0001",
     *     "vatId": "DE912345678",
     *     "address": {
     *       "addressAddon": "Loft 2",
     *       "city": "MÃ¼nchen",
     *       "streetAndNumber": "Luisenstr. 51",
     *       "postcode": "80333"
     *     }
     *   },
     *   "contactDetails": {
     *     "phoneNumber": "+490123456789",
     *     "email": "foo@bar.de"
     *   },
     *   "contacts": [
     *     {
     *       "contactId": "contact1",
     *       "contactName": "Anne Meier",
     *       "email": "anne@truck-os.de",
     *       "phoneNumber": "+49123456789"
     *     },
     *     {
     *       "contactId": "contact2",
     *       "contactName": "Oliver Denney",
     *       "email": "oliver@truck-os.de",
     *       "phoneNumber": "+447904123456"
     *     }
     *   ]
     * }
     */
    Company: {
      /** @example 1234-asdags-12312 */
      companyId: string;
      companyName: string;
      contactDetails?: components['schemas']['CompanyContactDetails'];
      contacts: components['schemas']['CompanyContact'][];
      /** @example low */
      creditWorthness: string;
      details: components['schemas']['SimpleCompany'];
    };
    CompanyAccountDetails: {
      bankAccount: components['schemas']['KycBankAccount'];
      beneficialOwners: components['schemas']['KycBeneficialOwners'];
      businessData: components['schemas']['KycBusinessData'];
      companyId: string;
      /** @enum {string} */
      kycStatus: 'complete' | 'in_progress' | 'orderbook_data_complete';
      legalRepresentatives: components['schemas']['KycLegalRepresentatives'];
      virtualIban: components['schemas']['VirtualIban'];
    };
    CompanyBase: {
      companyId: string;
      companyName: string;
      /** @enum {string} */
      kycStatus: 'complete' | 'in_progress' | 'orderbook_data_complete';
    };
    CompanyContact: {
      contactId: string;
      contactName: string;
      email: string;
      phoneNumber: string;
    };
    CompanyContactDetails: {
      email?: string;
      phoneNumber: string;
    };
    CompanyName: {
      companyId: string;
      companyName: string;
    };
    /**
     * @example {
     *   "id": "ABC123",
     *   "link": "https://truckos-dev-data-documentsbucket9ec9deb9-1dht08po0ke8p.s3.eu-west-1.amazonaws.com/local-dev/saintf/ui/uploads/b05bedf7-f20b-4a0a-9c43-876037f1cda0?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA2EJ4VQTM7BGDS6CJ%2F20230301%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20230301T182802Z&X-Amz-Expires=259200&X-Amz-Signature=fcc168beb97a8223fb509684120489feeb15ef9ffbf4daff940c5c5e615e58be&X-Amz-SignedHeaders=host&x-id=PutObject"
     * }
     */
    FileUploadInfoResponse: {
      id: string;
      link: string;
    };
    'big-decimal': string;
    /**
     * @example {
     *   "bic": "SSKMDEMM",
     *   "iban": "DE89 3704 0044 0532 0130 00",
     *   "authorization": true
     * }
     */
    KycBankAccount: {
      authorization: boolean;
      bic: string;
      iban: string;
    };
    /**
     * @example {
     *   "beneficialOwners": [
     *     {
     *       "firstName": "John",
     *       "lastName": "Galt",
     *       "city": "Hamburg",
     *       "country": "DE",
     *       "dob": "1985-12-27T00:00:00.000Z",
     *       "nationality": "DE",
     *       "placeOfBirth": "Bremen",
     *       "postcode": "20384",
     *       "streetAndNumber": "Am Wacker 23"
     *     }
     *   ]
     * }
     */
    KycBeneficialOwners: {
      beneficialOwners: {
        city: string;
        country: string;
        dob: string;
        firstName: string;
        lastName: string;
        nationality: string;
        placeOfBirth: string;
        postcode: string;
        streetAndNumber: string;
      }[];
    };
    /**
     * @example {
     *   "addressAddon": "Loft 2",
     *   "city": "MÃ¼nchen",
     *   "commercialRegisterNumber": "HRA162345",
     *   "companyName": "Monster AG",
     *   "country": "DE",
     *   "legalForm": "DE0001",
     *   "phoneNumber": "+49123456789",
     *   "postcode": "80333",
     *   "registrationAuthority": "RADE0001",
     *   "streetAndNumber": "Luisenstr. 51",
     *   "vatId": "DE912345678",
     *   "businessLicenseFilename": "something.pdf",
     *   "businessLicenseUploadId": "ABCSDS"
     * }
     */
    KycBusinessData: {
      addressAddon?: string;
      businessLicenseFilename?: string;
      businessLicenseUploadId?: string;
      city: string;
      commercialRegisterNumber: string;
      companyName: string;
      country: string;
      legalForm: string;
      phoneNumber: string;
      postcode: string;
      registrationAuthority: string;
      streetAndNumber: string;
      vatId: string;
    };
    /**
     * @example {
     *   "areYouLegalRepresentative": true,
     *   "powerOfRepresentation": "sole",
     *   "representatives": [
     *     {
     *       "firstName": "John",
     *       "lastName": "Gelt",
     *       "email": "john@galt.com",
     *       "dob": "1985-12-27T00:00:00.000Z",
     *       "language": "en_US"
     *     }
     *   ]
     * }
     */
    KycLegalRepresentatives: {
      areYouLegalRepresentative: boolean;
      /** @enum {string} */
      powerOfRepresentation: 'joint' | 'sole';
      representatives: {
        dob: string;
        email: string;
        firstName: string;
        language: string;
        lastName: string;
      }[];
    };
    KycStatusResponse: {
      progress?: number;
      /** @enum {string} */
      status: 'Complete' | 'InProgress' | 'NotStarted' | 'Pending';
    };
    /**
     * @example {
     *   "date": "2022-11-03T00:00:00.000Z",
     *   "venue": {
     *     "venueId": "venue12345",
     *     "CompanyName": "SÃ¼dost Fruchtkontor",
     *     "Street": "Luisenstr. 51",
     *     "City": "MÃ¼nchen",
     *     "PostalCode": "80803"
     *   }
     * }
     */
    LoadingDetails: {
      date: string;
      venue: components['schemas']['Venue'];
    };
    /**
     * @example {
     *   "orderId": "order1234",
     *   "clearingSystem": "invoice",
     *   "status": {
     *     "orderConfirmationDate": "2023-02-01",
     *     "orderCompletionDate": "2023-02-04",
     *     "invoiceAndOrPodSentDate": "2023-02-04",
     *     "creditNoteReceivedDate": "2023-02-05",
     *     "paymentReceivedDate": "2023-03-04"
     *   },
     *   "customerInformation": {
     *     "companyId": "company1",
     *     "companyName": "DB Schenker",
     *     "streetAndNumber": "Lyonder Str. 15",
     *     "postcode": "60152",
     *     "city": "Frankfurt am Main"
     *   },
     *   "customerContact": {
     *     "contactId": "contact1",
     *     "contactName": "Michaela Muller",
     *     "email": "m.mueller@dbschenker.de",
     *     "phoneNumber": "+49089386523"
     *   },
     *   "customerOrderNumber": "KN22-6782",
     *   "loadingDetails": {
     *     "date": "2023-02-04T16:00:00.000Z",
     *     "venue": {
     *       "venueId": "venue12345",
     *       "CompanyName": "SÃ¼dost Fruchtkontor",
     *       "Street": "Luisenstr. 51",
     *       "City": "MÃ¼nchen",
     *       "PostalCode": "80803"
     *     }
     *   },
     *   "unloadingDetails": {
     *     "date": "2022-11-03T00:00:00.000Z",
     *     "venue": {
     *       "venueId": "venue12345",
     *       "CompanyName": "Nordwest Fruchtkontor",
     *       "Street": "GroÃe Bleichen 33",
     *       "City": "Hamburg",
     *       "PostalCode": "20354"
     *     }
     *   },
     *   "loadDescription": "50 Paletten Bananen",
     *   "servicesDetails": {
     *     "paymentTerm": 45,
     *     "currency": "EUR",
     *     "services": [
     *       {
     *         "service": "Freight transport",
     *         "netAmount": 1003.6
     *       },
     *       {
     *         "service": "20x Pallets",
     *         "netAmount": 200
     *       }
     *     ]
     *   },
     *   "stipulations": [
     *     "This is the first stipulation",
     *     "This is stipulation 2"
     *   ],
     *   "documents": [
     *     {
     *       "name": "invoice",
     *       "filename": "Invoice_Wolfrum_2022-283_for_factoring.pdf",
     *       "uploadId": "up123"
     *     },
     *     {
     *       "name": "proof_of_delivery",
     *       "filename": "POD_Wolfrum_2022-283_for_factoring.pdf",
     *       "uploadId": "up234"
     *     }
     *   ]
     * }
     */
    OrderDetail: {
      /** @enum {string} */
      clearingSystem?: 'credit_note' | 'invoice';
      customerContact?: components['schemas']['PaymentsCustomerContact'];
      customerInformation?: components['schemas']['PaymentsCustomerInformation'];
      customerOrderNumber?: string;
      documents?: {
        filename: string;
        /** @enum {string} */
        name: 'credit_note' | 'invoice' | 'order_confirmation' | 'order' | 'proof_of_delivery';
        uploadId: string;
      }[];
      loadDescription?: string;
      loadingDetails?: components['schemas']['LoadingDetails'];
      orderId: string;
      servicesDetails?: components['schemas']['ServiceDetails'];
      status: components['schemas']['OrderStatusDetails'];
      stipulations?: string[];
      unloadingDetails?: components['schemas']['LoadingDetails'];
    };
    /** @enum {string} */
    OrderStatus:
      | 'CREATED'
      | 'DELIVERED'
      | 'IN_COLLECTION'
      | 'OVERDUE'
      | 'PAID'
      | 'WAITING_FOR_PAYMENT'
      | 'WRITEOFF';
    OrderStatusDetails: {
      creditNoteReceivedDate?: string;
      invoiceAndOrPodSentDate?: string;
      orderCompletionDate?: string;
      orderConfirmationDate?: string;
      paymentReceivedDate?: string;
    };
    /**
     * @example {
     *   "orderId": "order123",
     *   "sortIndex": 0,
     *   "status": "CREATED",
     *   "deliveryDate": "2022-08-11T00:00:00.000Z",
     *   "amount": 1040,
     *   "customerName": "DHL Supply Chain"
     * }
     */
    OrderSummary: {
      amount?: number;
      customerName: string;
      deliveryDate?: string;
      orderId: string;
      sortIndex: number;
      status: components['schemas']['OrderStatus'];
    };
    /**
     * @example {
     *   "open": 2080,
     *   "received": 5890.13
     * }
     */
    PaymentBalances: {
      open: number;
      received: number;
    };
    /**
     * @example {
     *   "requestId": "request1234",
     *   "clearingSystem": "invoice",
     *   "status": "SOLD",
     *   "invoiceOrCreditNoteNumber": "2022-238",
     *   "deliveryDate": "2022-08-11T00:00:00.000Z",
     *   "invoiceOrCreditNoteDate": "2022-10-11T00:00:00.000Z",
     *   "amount": 1040,
     *   "paymentTerm": 45,
     *   "payoutDate": "2022-11-03T00:00:00.000Z",
     *   "factoringFee": 0.015,
     *   "payoutAmount": 1003.6,
     *   "documents": [
     *     {
     *       "name": "invoice",
     *       "filename": "Invoice_Wolfrum_2022-283_for_factoring.pdf",
     *       "uploadId": "up123"
     *     },
     *     {
     *       "name": "proof_of_delivery",
     *       "filename": "POD_Wolfrum_2022-283_for_factoring.pdf",
     *       "uploadId": "up234"
     *     }
     *   ],
     *   "customerInformation": {
     *     "companyId": "company1",
     *     "companyName": "DB Schenker",
     *     "streetAndNumber": "Lyonder Str. 15",
     *     "postcode": "60152",
     *     "city": "Frankfurt am Main"
     *   },
     *   "customerContact": {
     *     "contactId": "contact1",
     *     "contactName": "Michaela Muller",
     *     "email": "m.mueller@dbschenker.de",
     *     "phoneNumber": "+49089386523"
     *   }
     * }
     */
    PaymentRequestDetail: {
      amount: number;
      /** @enum {string} */
      clearingSystem: 'credit_note' | 'invoice';
      customerContact: components['schemas']['PaymentsCustomerContact'];
      customerInformation: components['schemas']['PaymentsCustomerInformation'];
      deliveryDate: string;
      documents: {
        filename: string;
        /** @enum {string} */
        name: 'credit_note' | 'invoice' | 'proof_of_delivery';
        uploadId: string;
      }[];
      factoringFee: number;
      invoiceOrCreditNoteDate: string;
      invoiceOrCreditNoteNumber: string;
      paymentTerm: number;
      payoutAmount: number;
      payoutDate: string;
      requestId: string;
      status: components['schemas']['PaymentRequestStatus'];
    };
    /** @enum {string} */
    PaymentRequestStatus:
      | 'DENIED'
      | 'DRAFT'
      | 'IN_COLLECTION'
      | 'IN_SETTLEMENT'
      | 'PAID_TO_CARRIER'
      | 'REVOKED'
      | 'SETTLED'
      | 'SETTLEMENT_OVERDUE'
      | 'SOLD'
      | 'SUBMITTED'
      | 'UNKNOWN'
      | 'UNPAID_TO_BUYER';
    /**
     * @example {
     *   "requestId": "request123",
     *   "sortIndex": 0,
     *   "status": "IN_SETTLEMENT",
     *   "deliveryDate": "2022-08-11T00:00:00.000Z",
     *   "amount": 1040,
     *   "debtorName": "DHL Supply Chain"
     * }
     */
    PaymentRequestSummary: {
      amount?: number;
      debtorName: string;
      deliveryDate?: string;
      requestId: string;
      sortIndex: number;
      status: components['schemas']['PaymentRequestStatus'];
    };
    /**
     * @example {
     *   "contactId": "contact1"
     * }
     */
    PaymentsCustomerContact: {
      contactId: string;
      contactName?: string;
      email?: string;
      phoneNumber?: string;
    };
    /**
     * @example {
     *   "companyId": "company1"
     * }
     */
    PaymentsCustomerInformation: {
      addressAddon?: string;
      city?: string;
      commercialRegisterNumber?: string;
      companyId: string;
      companyName?: string;
      country?: string;
      legalForm?: string;
      postcode?: string;
      registrationAuthority?: string;
      streetAndNumber?: string;
      vatId?: string;
    };
    PaymentsPaymentDetails: {
      amount: number;
      applicableLaw: string;
      /** @enum {string} */
      clearingSystem: 'credit_note' | 'invoice';
      deliveryDate: string;
      invoiceOrCreditNoteDate: string;
      invoiceOrCreditNoteNumber: string;
      paymentTerm: number;
    };
    /**
     * @example {
     *   "confirmInvoiceHasIban": true,
     *   "invoiceFilename": "invoice-1.pdf",
     *   "invoiceUploadId": "upload123",
     *   "proofOfDeliveryFilename": "delivery-2.pdf",
     *   "proofOfDeliveryUploadId": "upload345"
     * }
     */
    PaymentsUploadDocuments: {
      confirmInvoiceHasIban?: boolean;
      creditNoteFilename?: string;
      creditNoteUploadId?: string;
      invoiceFilename?: string;
      invoiceUploadId?: string;
      proofOfDeliveryFilename?: string;
      proofOfDeliveryUploadId?: string;
    };
    /**
     * @example {
     *   "companyId": "company1",
     *   "companyName": "Monster AG",
     *   "kycStatus": "complete"
     * }
     */
    RegisteredCompany: {
      companyId: string;
      companyName: string;
      /** @enum {string} */
      kycStatus: 'complete' | 'in_progress';
    };
    /**
     * @example {
     *   "paymentTerm": 45,
     *   "currency": "EUR",
     *   "services": [
     *     {
     *       "service": "Freight transport",
     *       "netAmount": 1003.6
     *     },
     *     {
     *       "service": "20x Pallets",
     *       "netAmount": 200
     *     }
     *   ]
     * }
     */
    ServiceDetails: {
      currency?: string;
      paymentTerm?: number;
      services?: {
        netAmount: number;
        service: string;
      }[];
    };
    /** @description Simple German Company */
    SimpleCompany: {
      address: {
        addressAddon?: string;
        city: string;
        postcode: string;
        streetAndNumber: string;
      };
      commercialRegisterNumber: string;
      companyType: string;
      country: string;
      legalForm: string;
      registrationAuthority: string;
      vatId: string;
    };
    /**
     * @example {
     *   "venueId": "venue12345",
     *   "CompanyName": "SÃ¼dost Fruchtkontor",
     *   "Street": "Luisenstr. 51",
     *   "City": "MÃ¼nchen",
     *   "PostalCode": "80803"
     * }
     */
    Venue: {
      City: string;
      CompanyName?: string;
      PostalCode: string;
      Street?: string;
      venueId?: string;
    };
    /**
     * @example {
     *   "bic": "SSKMDEMM",
     *   "iban": "DE89 3704 0044 0532 0130 00",
     *   "recipient": "Wonka Transporte GmbH via Walbing"
     * }
     */
    VirtualIban: {
      bic: string;
      iban: string;
      recipient: string;
    };
    WorkflowStatus: {
      progress: number;
      /** @enum {string} */
      status: 'complete' | 'in_progress' | 'new';
    };
  };
}

export type external = Record<string, never>;

export interface operations {
  attachCompany: {
    /** Attach company to the user */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    /** @description attach data */
    requestBody: {
      content: {
        'application/json': {
          attachedUntil: string;
          /** @enum {string} */
          role:
            | 'beneficial_owner'
            | 'driver'
            | 'finance'
            | 'legal_representative'
            | 'support_admin';
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  deletePaymentRequest: {
    /** Delete the payment request */
    parameters: {
      /** @description Company id */
      /** @description Request id */
      path: {
        companyId: string;
        requestId: string;
      };
    };
    responses: {
      /** @description OK */
      204: never;
      /** @description Not found */
      404: never;
      /** @description Cannot delete */
      409: never;
    };
  };
  getAllCompanies: {
    /** Get all companies registered in TOS */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            companies: components['schemas']['RegisteredCompany'][];
            isEnd: boolean;
          };
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getAttachedCompanies: {
    /** Get attached companies */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            attachedCompanies: components['schemas']['AttachedCompany'][];
            isEnd: boolean;
          };
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getCompany: {
    /** Get company basic details */
    parameters: {
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['Company'];
        };
      };
    };
  };
  getCompanyAccountDetails: {
    /** Get the company account details */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['CompanyAccountDetails'];
        };
      };
      /** @description No content */
      204: never;
    };
  };
  getCompanyNames: {
    /** Get the list of company names and ids */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['CompanyName'][];
        };
      };
    };
  };
  getDownloadLink: {
    /** Get a download url for the upload id provided */
    parameters: {
      /** @description Upload id */
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            filename: string;
            uploadId: string;
            url: string;
          };
        };
      };
    };
  };
  getFileUploadInfo: {
    /** Get a file upload id and link */
    requestBody: {
      content: {
        'application/json': {
          contentType: string;
          filename: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['FileUploadInfoResponse'];
        };
      };
    };
  };
  getKycBankAccountFormInit: {
    /** Get the bank account form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KycBankAccount'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getKycBeneficialOwnersFormInit: {
    /** Get the beneficial owners form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KycBeneficialOwners'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getKycBusinessDataFormInit: {
    /** Get the business data form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KycBusinessData'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getKycLegalRepresentativesFormInit: {
    /** Get the legal representatives form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['KycLegalRepresentatives'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getKycVirtualIban: {
    /** Get the virtual iban data from Walbing api */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['VirtualIban'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getPaymentsPaymentDetailsFormInit: {
    /** Get the payment details form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentsPaymentDetails'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  postPaymentsPaymentDetailsForm: {
    /** Submit payment details form values */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['PaymentsPaymentDetails'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getPaymentsUploadDocumentsFormInit: {
    /** Get the upload documents form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentsUploadDocuments'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  postPaymentsUploadDocumentsForm: {
    /** Submit upload documents form values */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['PaymentsUploadDocuments'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getNewPaymentWorkflowId: {
    /** Get a new payment workflow id */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            id: string;
          };
        };
      };
    };
  };
  getPaymentRequest: {
    /** Get the payment request details */
    parameters: {
      /** @description Company id */
      /** @description Request id */
      path: {
        companyId: string;
        requestId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentRequestDetail'];
        };
      };
      /** @description Not found */
      404: never;
    };
  };
  removeAttachedCompany: {
    /** Attach company to the user */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      204: never;
      /** @description Not found */
      404: never;
      /** @description Cannot delete */
      409: never;
    };
  };
  getPaymentBalances: {
    /** Get the account payment balances */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentBalances'];
        };
      };
    };
  };
  getPaymentsList: {
    /** Get the payments list */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
      /** @description Timestamp to load the payments from */
/** @description Number of payments to load */
/** @description Text search value */
/** @description The index to load from */
      query: {
        count: number;
        fromTime: number;
        index: number;
        search?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            isEnd: boolean;
            requests: components['schemas']['PaymentRequestSummary'][];
            userHasRequests: boolean;
          };
        };
      };
    };
  };
  getPreviousCompanies: {
    /** Get the list of previous company names and ids */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['CompanyName'][];
        };
      };
    };
  };
  getPaymentWorkflowStatus: {
    /** Get the payment workflow data for the id */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['WorkflowStatus'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getPaymentsConfirmationFormInit: {
    /** Get the final confirmation form data */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentRequestDetail'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  getKycWorkflowStatus: {
    /** Get the status of the kyc flow */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['WorkflowStatus'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  postPaymentsConfirmationForm: {
    /** Submit confirmation form values */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    requestBody?: {
      content: {
        'application/json': {
          confirm?: boolean;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
    };
  };
  postKycBankAccountForm: {
    /** Submit bank account form values */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['KycBankAccount'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getPaymentsCustomerContactFormInit: {
    /** Get the customer contact form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentsCustomerContact'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  postKycBeneficialOwnersForm: {
    /** Submit beneficial owners form values */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['KycBeneficialOwners'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  postPaymentsCustomerContactForm: {
    /** Submit customer contact form values */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['PaymentsCustomerContact'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  postKycBusinessDataForm: {
    /** Submit business data form values */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['KycBusinessData'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getPaymentsCustomerInformationFormInit: {
    /** Get the customer information form along with already submitted form entries */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['PaymentsCustomerInformation'];
        };
      };
      /** @description No-content */
      204: never;
    };
  };
  postKycLegalRepresentativesForm: {
    /** Submit legal representatives form values */
    parameters: {
      /** @description Company id */
      path: {
        companyId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['KycLegalRepresentatives'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getNewKycCompanyId: {
    /** Get a new kyc company id */
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': {
            id: string;
          };
        };
      };
    };
  };
  postPaymentsCustomerInformationForm: {
    /** Submit customer information form values */
    parameters: {
      /** @description Company id */
      /** @description Payment id */
      path: {
        companyId: string;
        paymentId: string;
      };
    };
    /** @description The form data */
    requestBody: {
      content: {
        'application/json': {
          form: components['schemas']['PaymentsCustomerInformation'];
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': boolean;
        };
      };
      /** @description Invalid form data */
      400: never;
    };
  };
  getOrderWorkflowStatus: {
    /** Get the order workflow data for the id */
    parameters: {
      /** @description Company id */
      /** @description Order id */
      path: {
        companyId: string;
        orderId: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['WorkflowStatus'];
        };
      };
      /** @description No-contents */
      204: never;
    };
  };
}
