openapi: 3.0.2
info:
  title: TruckOS API
  version: "1.0"
servers:
  - url: https://api.server.test/v1
  - url: http://127.0.0.1:4010
tags:
  - name: Customer
    description: Counterparty/Customer companies
  - name: Contact
    description: Contact Details/Information
  - name: Account
    description: Self-view ("my") company
  - name: Order
    description: Job Orders (take this from here to there on these terms)
  - name: OrderDocuments
    description: Order documents management APIs
  - name: Search
    description: Endpoints used to perform various types of search
components:
  parameters:
    companyIdPathParam:
      in: path
      name: companyId
      required: true
      schema:
        type: string
    customerIdPathParam:
      in: path
      name: customerId
      required: true
      schema:
        type: string
    contactIdPathParam:
      in: path
      name: contactId
      required: true
      schema:
        type: string
    orderIdPathParam:
      in: path
      name: orderId
      required: true
      schema:
        type: string
    documentIdPathParam:
      in: path
      name: documentId
      required: true
      schema:
        type: string
  schemas:
    Address:
      type: object
      properties:
        streetAndNumber:
          type: string
        addressAddOn:
          type: string
        city:
          type: string
        postcode:
          type: string
        country:
          type: string
        formattedAddress:
          type: string
      example:
        streetAndNumber: Luisenstr. 51
        city: München
        postcode: "80803"
        country: Germany
        formattedAddress: Luisenstr. 51, München, 80803, Germany
    date-time:
      type: string
      format: date-time
    big-decimal:
      type: string
    currency:
      type: string
      minimum: 3
      maximum: 3
    ClientRequestRejection:
      type: object
      properties:
        error:
          type: string
        params:
          type: object
          additionalProperties: true
    FileMetadata:
      type: object
      properties:
        fileName:
          type: string
        contentType:
          type: string
      example:
        fileName: TruckOS-Special-Conditions-DE.pdf
        contentType: application/pdf
    DownloadFileLink:
      type: object
      properties:
        documentMetadata:
          $ref: "#/components/schemas/FileMetadata"
        url:
          type: string
        expires:
          $ref: "#/components/schemas/date-time"
    UploadFileLink:
      type: object
      properties:
        uploadId:
          type: string
        url:
          type: string
        expires:
          $ref: "#/components/schemas/date-time"
      example:
        url: https://truckos-dev-data-documentsbucket9ec9deb9-1dht08po0ke8p.s3.eu-west-1.amazonaws.com/local-dev/saintf/ui/uploads/b05bedf7-f20b-4a0a-9c43-876037f1cda0?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA2EJ4VQTM7BGDS6CJ%2F20230301%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20230301T182802Z&X-Amz-Expires=259200&X-Amz-Signature=fcc168beb97a8223fb509684120489feeb15ef9ffbf4daff940c5c5e615e58be&X-Amz-SignedHeaders=host&x-id=PutObject
        uploadId: document-123
        expires: 2023-03-04T18:28:02.000Z
    UserProfile:
      type: object
      required:
        - firstName
        - lastName
        - locale
      properties:
        userId:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        locale:
          type: string
          enum:
            - de-DE
            - en-US
        avatarUrl:
          type: string
        profileStatus:
          type: string
          enum:
            - COMPLETE
            - INCOMPLETE
    User:
      allOf:
        - $ref: "#/components/schemas/UserProfile"
        - type: object
          required:
            - companies
          properties:
            companies:
              type: array
              items:
                $ref: "#/components/schemas/CompanySummary"
    Venue:
      type: object
      properties:
        venueId:
          type: string
        venueName:
          type: string
        address:
          $ref: "#/components/schemas/Address"
      example:
        venueId: venue12345
        venueName: Südost Fruchtkontor
        address:
          streetAndNumber: Luisenstr. 51
          city: München
          postcode: "80803"
          country: Germany
    CompanySummary:
      type: object
      required:
        - companyId
        - companyName
      properties:
        companyId:
          type: string
        companyName:
          type: string
        availableFeatures:
          type: array
          items:
            $ref: "#/components/schemas/AccountFeature"
      example:
        companyId: company112
        companyName: Monsters Inc
        availableFeatures:
          - functionality: ORDER_BOOK
            status: FEATURE_AVAILABLE
          - functionality: FACTORING_WALBING
            status: FEATURE_AVAILABLE
    CompanySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/CompanySummary"
    CompanyBase:
      allOf:
        - $ref: "#/components/schemas/CompanySummary"
        - type: object
          required:
            - details
          properties:
            state:
              enum:
                - DRAFT
                - VALIDATED
            details:
              $ref: "#/components/schemas/CountrySpecificCompanyDetails"
    CountrySpecificCompanyDetails:
      oneOf:
        - $ref: "#/components/schemas/GermanCompanyDetails"
      discriminator:
        propertyName: companyType
        mapping:
          GermanCompanyDetails: "#/components/schemas/GermanCompanyDetails"
    CompanyContactBase:
      type: object
      properties:
        companyId:
          type: string
        contactId:
          type: string
        contactName:
          type: string
        contactDetails:
          $ref: "#/components/schemas/CompanyContactDetails"
    CompanyContactDetails:
      type: object
      properties:
        email:
          type: string
        phoneNumber:
          type: string
    GermanCompanyDetails:
      type: object
      required:
        - companyType
      properties:
        companyType:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        commercialRegisterNumber:
          type: string
        legalForm:
          type: string
        registrationAuthority:
          type: string
        vatId:
          type: string
        taxId:
          type: string
    AccountCompany:
      allOf:
        - $ref: "#/components/schemas/CompanyBase"
        - type: object
          properties:
            accountCompanyContacts:
              type: array
              items:
                $ref: "#/components/schemas/AccountCompanyContact"
            accountCompanyBankDetails:
              $ref: "#/components/schemas/AccountCompanyBankAccount"
            availableFeatures:
              type: array
              items:
                $ref: "#/components/schemas/AccountFeature"
            accountCompanyLogo:
              type: object
              properties:
                logoUrl:
                  type: string
                mimeType:
                  type: string
    AccountFeature:
      type: object
      properties:
        functionality:
          enum:
            - ORDER_BOOK
            - FACTORING_WALBING
        status:
          enum:
            - USER_NOT_APPLIED
            - VERIFICATION_IN_PROGRESS
            - VERIFICATION_INSUFFICIENT_DATA
            - FEATURE_AVAILABLE
            - FEATURE_FORBIDDEN
    AccountCompanyContact:
      allOf:
        - $ref: "#/components/schemas/CompanyContactBase"
        - type: object
          properties:
            includeIn:
              type: array
              items:
                enum:
                  - outgoingBookkeeping
                  - publicProfile
                  - incomingBookkeeping
    AccountCompanyBankAccount:
      type: object
      properties:
        iban:
          type: string
        bic:
          type: string
      required:
        - iban
        - bic
      example:
        iban: DE89 3704 0044 0532 0130 00
        bic: SSKMDEMM
    CustomerCompany:
      allOf:
        - $ref: "#/components/schemas/CompanyBase"
        - type: object
          properties:
            businessAbilityKnowledge:
              type: object
              properties:
                creditWorthiness:
                  type: string
                  example: low
            publicCompanyContacts:
              type: array
              items:
                $ref: "#/components/schemas/CustomerCompanyContact"
            relationshipCompanyContacts:
              type: array
              items:
                $ref: "#/components/schemas/CustomerCompanyContact"
    CustomerCompanyContact:
      allOf:
        - $ref: "#/components/schemas/CompanyContactBase"
        - type: object
          properties:
            useFor:
              type: array
              items:
                enum:
                  - bookkeeping
                  - disposition
    Order:
      type: object
      properties:
        orderId:
          type: string
        orderVersion:
          type: number
        orderWorkflow:
          $ref: "#/components/schemas/OrderWorkflowDetails"
        orderDetails:
          $ref: "#/components/schemas/OrderDetails"
        documentDetails:
          type: array
          items:
            $ref: "#/components/schemas/OrderDocumentDetails"
        workflowAvailableActions:
          $ref: "#/components/schemas/OrderWorkflowActions"
      example:
        orderId: order123
        orderWorkflow:
          workflowSteps:
            - stepName: OrderConfirmation
              stepStatus: Actionable
              stepAvailableActions:
                - SendOrderConfirmation
            - stepName: PODUploaded
              stepStatus: Actionable
              stepAvailableActions:
                - UploadProofOfDelivery
            - stepName: PODSent
              stepStatus: Actionable
              stepAvailableActions:
                - SendProofOfDelivery
            - stepName: InvoiceSent
              stepStatus: Actionable
              stepAvailableActions:
                - SendInvoice
            - stepName: CreditNoteReceived
              stepStatus: Actionable
              stepAvailableActions:
                - UploadCreditNote
            - stepName: PaymentReceived
              stepStatus: Actionable
              stepAvailableActions:
                - RecordPayment
        orderDetails:
          status: CREATED
          clearingSystem: invoice
          customerInformation:
            customerOrderNumber: KN-23-2078
            customerCompany:
              companyId: company-14251
              companyName: DB Schenker
              kycStatus: in_progress
              details:
                companyType: SimpleCompany
                address:
                  streetAndNumber: Feilchenweg 3
                  addressAddOn: ""
                  city: Stuttgart
                  postcode: "15673"
                  country: DE
            contacts:
              dispositionContact:
                companyId: company-14251
                contactId: contact-345
                contactName: Michael Müller
                contactDetails:
                  email: michael@mueller-transporte.de
                  phoneNumber: +49-177-3680448
              bookkeepingContact:
                companyId: company-14251
                contactId: contact-345
                contactName: Lea Schmidt
                contactDetails:
                  email: lea@mueller-transporte.de
                  phoneNumber: +49-177-3680446
          loadDetails:
            loadingTimeAndPlace:
              timeWindow:
                start: 2023-02-03T12:00:00.000Z
                end: 2023-02-03T13:00:00.000Z
              venue:
                venueId: venue12345
                venueName: Südost Fruchtkontor
                address:
                  streetAndNumber: Luisenstr. 51
                  city: München
                  postcode: "80803"
                  country: Deutschland
            unloadingTimeAndPlace:
              timeWindow:
                start: 2023-02-04T12:00:00.000Z
                end: 2023-02-04T14:00:00.000Z
              venue:
                venueId: venue12346
                venueName: Nordwest Fruchtkontor
                address:
                  streetAndNumber: Große Bleichen 33
                  city: Hamburg
                  postcode: "20354"
                  country: Deutschland
            loadDescription: 50 Paletten Bananen
          stipulations:
            - This is the first stipulation
            - This is stipulation 2
          serviceAgreementDetails:
            paymentTermDays: 45
            vatRate: 0.19
            currency: EUR
            services:
              - service: Freight transport
                netAmount: 1003.6
              - service: 20x Pallets
                netAmount: 200
        documentDetails:
          - documentId: doc-21352
            documentType: Order
            documentActions:
              - download
              - delete
            fileMetadata:
              fileName: Order_Confirmation_Wolfrum_2022-283.pdf
              contentType: pdf
          - documentId: ""
            documentType: OrderConfirmation
            documentActions:
              - SendOrderConfirmation
            fileMetadata:
              fileName: ""
              contentType: ""
          - documentId: doc-21353
            documentType: ProofOfDelivery
            documentActions:
              - UploadProofOfDelivery
            fileMetadata:
              fileName: Order_Confirmation_Wolfrum_2022-283.pdf
              contentType: pdf
          - documentId: doc-21354
            documentType: Invoice
            documentActions:
              - UploadProofOfDelivery
            fileMetadata:
              fileName: Order_Confirmation_Wolfrum_2022-283.pdf
              contentType: pdf
        workflowAvailableActions:
          - SendOrderConfirmation
          - UploadProofOfDelivery
          - ShareWithDriver
          - DeleteOrder
    OrderSummary:
      type: object
      required:
        - orderId
      properties:
        orderId:
          type: string
        sortIndex:
          type: number
        status:
          $ref: "#/components/schemas/OrderStatus"
        deliveryDate:
          $ref: "#/components/schemas/date-time"
        currency:
          $ref: "#/components/schemas/currency"
        amount:
          $ref: "#/components/schemas/big-decimal"
        customerName:
          type: string
        clearingSystem:
          $ref: "#/components/schemas/OrderClearingSystem"
        workflowAvailableActions:
          $ref: "#/components/schemas/OrderWorkflowActions"
    OrderStatus:
      type: string
      enum:
        - CREATED
        - DELIVERED
        - WAITING_FOR_PAYMENT
        - PAID
        - OVERDUE
        - IN_COLLECTION
        - WRITEOFF
        - ARCHIVED
    OrderClearingSystem:
      type: string
      enum:
        - invoice
        - credit_note
    OrderDetails:
      type: object
      required:
        - customerInformation
      properties:
        status:
          $ref: "#/components/schemas/OrderStatus"
        customerInformation:
          $ref: "#/components/schemas/OrderCustomerInformation"
        loadDetails:
          $ref: "#/components/schemas/OrderLoadDetails"
        stipulations:
          type: array
          items:
            type: string
        serviceAgreementDetails:
          $ref: "#/components/schemas/OrderServiceAgreementDetails"
        clearingSystem:
          $ref: "#/components/schemas/OrderClearingSystem"
    OrderCustomerInformation:
      type: object
      properties:
        customerOrderNumber:
          type: string
        customerCompany:
          $ref: "#/components/schemas/CustomerCompany"
        contacts:
          type: object
          properties:
            dispositionContact:
              $ref: "#/components/schemas/CustomerCompanyContact"
            bookkeepingContact:
              $ref: "#/components/schemas/CustomerCompanyContact"
    OrderLoadTimeAndPlace:
      type: object
      properties:
        timeWindow:
          $ref: "#/components/schemas/TimeWindow"
        venue:
          $ref: "#/components/schemas/Venue"
    TimeWindow:
      type: object
      required:
        - start
      properties:
        start:
          $ref: "#/components/schemas/date-time"
        end:
          $ref: "#/components/schemas/date-time"
      example:
        start: 2023-01-15T18:00:00.123Z
        end: 2023-01-18T18:00:00.123Z
    OrderLoadDetails:
      type: object
      properties:
        loadingTimeAndPlace:
          $ref: "#/components/schemas/OrderLoadTimeAndPlace"
        unloadingTimeAndPlace:
          $ref: "#/components/schemas/OrderLoadTimeAndPlace"
        loadDescription:
          type: string
    OrderServiceAgreementDetails:
      type: object
      properties:
        paymentTermDays:
          type: integer
        vatRate:
          type: number
        currency:
          $ref: "#/components/schemas/currency"
        services:
          type: array
          items:
            type: object
            properties:
              service:
                type: string
              netAmount:
                type: number
            required:
              - service
              - netAmount
    OrderWorkflowAction:
      enum:
        - UploadOrder
        - SendOrderConfirmation
        - UploadProofOfDelivery
        - SendInvoice
        - SendProofOfDelivery
        - UploadCreditNote
        - RecordPayment
        - FactorOrder
        - DeleteOrder
        - ShareWithDriver
    OrderWorkflowActions:
      type: array
      items:
        $ref: "#/components/schemas/OrderWorkflowAction"
    OrderWorkflowDetails:
      type: object
      description: Current Order Workflow details and status
      properties:
        workflowSteps:
          type: array
          items:
            $ref: "#/components/schemas/OrderWorkflowStep"
    OrderWorkflowStep:
      type: object
      properties:
        stepName:
          enum:
            - OrderUploaded
            - OrderConfirmation
            - PODUploaded
            - PODSent
            - InvoiceSent
            - CreditNoteReceived
            - PaymentReceived
            - SentToCollections
            - WrittenOff
        stepStatus:
          enum:
            - NotReady
            - Actionable
            - Warning
            - Complete
            - Skipped
        stepCompletionDate:
          $ref: "#/components/schemas/date-time"
        stepAvailableActions:
          $ref: "#/components/schemas/OrderWorkflowActions"
    OrderSharingInfo:
      type: object
      required:
        - channel
        - recipient
      properties:
        channel:
          type: string
          enum:
            - EMAIL
        recipient:
          type: string
      example:
        channel: EMAIL
        recipient: foo@bar.de
    OrderPaymentReceiptInfo:
      type: object
      required:
        - paymentReceivedOn
      properties:
        paymentReceivedOn:
          type: string
          format: date
      example:
        paymentReceivedOn: 2023-07-23
    OrderDocumentDetails:
      type: object
      properties:
        documentId:
          type: string
        documentType:
          enum:
            - Order
            - OrderConfirmation
            - ProofOfDelivery
            - Invoice
            - CreditNote
        documentActions:
          type: array
          items:
            $ref: "#/components/schemas/DocumentWorkflowAction"
        fileMetadata:
          $ref: "#/components/schemas/FileMetadata"
    DocumentWorkflowAction:
      enum:
        - UploadOrder
        - SendOrderConfirmation
        - UploadProofOfDelivery
        - SendInvoice
        - SendProofOfDelivery
        - UploadCreditNote
        - RecordPayment
        - FactorOrder
        - DeleteOrder
        - ShareWithDriver
        - delete
        - download
    DocumentTypeForSend:
      type: string
      enum:
        - ORDER_CONFIRMATION
        - PROOF_OF_DELIVERY
        - INVOICE
    SendDocument:
      type: object
      required:
        - documentType
      properties:
        documentType:
          $ref: "#/components/schemas/DocumentTypeForSend"
      example:
        documentType: PROOF_OF_DELIVERY
    DocumentTypeForAutogeneration:
      type: string
      enum:
        - ORDER_CONFIRMATION
        - INVOICE
      example:
        documentType: INVOICE
    AutogeneratedDocument:
      type: object
      required:
        - documentType
      properties:
        documentType:
          $ref: "#/components/schemas/DocumentTypeForAutogeneration"
    DocumentMetadata:
      type: object
      properties:
        fileName:
          type: string
        mimeType:
          type: string
      example:
        fileName: Proof_Of_Delivery.pdf
        mimeType: application/pdf
    DocumentBasicUploadOrGenerationResponseInfo:
      type: object
      required:
        - documentId
      properties:
        documentId:
          type: string
      example:
        documentId: company-123-order-321-KN22-6782-invoice-321
    DocumentDownloadInfo:
      type: object
      allOf:
        - $ref: "#/components/schemas/DocumentDownloadLinkInfo"
        - $ref: "#/components/schemas/DocumentMetadata"
    DocumentDownloadLinkInfo:
      type: object
      properties:
        downloadLink:
          type: string
        downloadLinkExpiresAt:
          $ref: "#/components/schemas/date-time"
      example:
        downloadLink: /files/TruckOS-Special-Conditions-DE.pdf
        downloadLinkExpiresAt: 2023-08-11T00:00:00.000Z
    UploadableDocumentTypes:
      enum:
        - ORDER_DETAILS
        - CREDIT_NOTE
        - PROOF_OF_DELIVERY
    GeneratedDocumentType:
      enum:
        - ORDER_CONFIRMATION
        - INVOICE
    LegalForm:
      type: object
      properties:
        name:
          type: string
        elfCode:
          type: string
      required:
        - name
        - elfCode
    Country:
      type: object
      properties:
        code:
          type: string
      required:
        - code
    RegisterAuthority:
      type: object
      properties:
        name:
          type: string
        registerAuthorityCode:
          type: string
        registrationNumberRequirement:
          type: string
          enum:
            - REQUIRED
            - OPTIONAL
        registrationDocumentRequirement:
          type: string
          enum:
            - REQUIRED
            - OPTIONAL
      required:
        - name
        - registerAuthorityCode
        - registrationNumberRequirement
        - registrationDocumentRequirement
    RegisteredCompany:
      type: object
      required:
        - companyId
        - companyName
        - kycStatus
      properties:
        companyId:
          type: string
        companyName:
          type: string
        kycStatus:
          type: string
          enum:
            - complete
            - in_progress
      example:
        companyId: company1
        companyName: Monster AG
        kycStatus: complete
    AttachedCompany:
      type: object
      required:
        - companyId
        - companyName
        - role
        - attachedUntil
      properties:
        companyId:
          type: string
        companyName:
          type: string
        attachedUntil:
          type: string
        role:
          type: string
          enum:
            - beneficial_owner
            - support_admin
            - finance
            - driver
            - legal_representative
      example:
        companyId: company1
        companyName: Monster AG
        attachedUntil: 2023-04-30T00:00:00.000Z
        role: support_admin
    AttachRequestData:
      type: object
      required:
        - role
        - attachedUntil
      properties:
        attachedUntil:
          type: string
        role:
          type: string
          enum:
            - beneficial_owner
            - support_admin
            - finance
            - driver
            - legal_representative
      example:
        - attachedUntil: 2023-04-30T00:00:00.000Z
          role: support_admin
    PaymentRequestStatus:
      type: string
      enum:
        - DENIED
        - DRAFT
        - IN_COLLECTION
        - IN_SETTLEMENT
        - PAID_TO_CARRIER
        - REVOKED
        - SETTLEMENT_OVERDUE
        - SETTLED
        - SOLD
        - SUBMITTED
        - UNKNOWN
        - UNPAID_TO_BUYER
    OrderStatusDetails:
      type: object
      properties:
        orderConfirmationDate:
          type: string
        orderCompletionDate:
          type: string
        invoiceAndOrPodSentDate:
          type: string
        creditNoteReceivedDate:
          type: string
        paymentReceivedDate:
          type: string
    SimpleCompany:
      type: object
      description: Simple German Company
      required:
        - companyType
        - country
        - address
        - legalForm
        - registrationAuthority
        - commercialRegisterNumber
        - vatId
      properties:
        companyType:
          type: string
        country:
          type: string
        registrationAuthority:
          type: string
        legalForm:
          type: string
        commercialRegisterNumber:
          type: string
        vatId:
          type: string
        address:
          type: object
          properties:
            addressAddon:
              type: string
            city:
              type: string
            postcode:
              type: string
            streetAndNumber:
              type: string
          required:
            - city
            - postcode
            - streetAndNumber
    CompanyContact:
      type: object
      required:
        - contactId
        - contactName
        - email
        - phoneNumber
      properties:
        contactId:
          type: string
        contactName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    Company:
      type: object
      required:
        - companyId
        - companyName
        - contacts
        - details
        - creditWorthness
      properties:
        companyId:
          type: string
          example: 1234-asdags-12312
        companyName:
          type: string
        creditWorthness:
          type: string
          example: low
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/CompanyContact"
        contactDetails:
          $ref: "#/components/schemas/CompanyContactDetails"
        details:
          oneOf:
            - $ref: "#/components/schemas/SimpleCompany"
          discriminator:
            propertyName: companyType
            mapping:
              SimpleCompany: "#/components/schemas/SimpleCompany"
      example:
        companyId: company1
        companyName: Monster AG
        creditWorthness: low
        details:
          companyType: SimpleCompany
          commercialRegisterNumber: HRA162345
          country: DE
          legalForm: DE0001
          registrationAuthority: RADE0001
          vatId: DE912345678
          address:
            addressAddon: Loft 2
            city: München
            streetAndNumber: Luisenstr. 51
            postcode: "80333"
        contactDetails:
          phoneNumber: "+490123456789"
          email: foo@bar.de
        contacts:
          - contactId: contact1
            contactName: Anne Meier
            email: anne@truck-os.de
            phoneNumber: "+49123456789"
          - contactId: contact2
            contactName: Oliver Denney
            email: oliver@truck-os.de
            phoneNumber: "+447904123456"
    CompanyAccountDetails:
      type: object
      properties:
        companyId:
          type: string
        businessData:
          $ref: "#/components/schemas/KycBusinessData"
        bankAccount:
          $ref: "#/components/schemas/KycBankAccount"
        virtualIban:
          $ref: "#/components/schemas/VirtualIban"
        legalRepresentatives:
          $ref: "#/components/schemas/KycLegalRepresentatives"
        beneficialOwners:
          $ref: "#/components/schemas/KycBeneficialOwners"
        kycStatus:
          type: string
          enum:
            - complete
            - in_progress
            - orderbook_data_complete
      required:
        - companyId
        - businessData
        - bankAccount
        - virtualIban
        - legalRepresentatives
        - beneficialOwners
        - kycStatus
    WorkflowStatus:
      type: object
      properties:
        progress:
          type: number
        status:
          type: string
          enum:
            - new
            - complete
            - in_progress
      required:
        - progress
        - status
    PaymentBalances:
      type: object
      properties:
        open:
          type: number
        received:
          type: number
      required:
        - open
        - received
      example:
        open: 2080
        received: 5890.13
    PaymentRequestSummary:
      type: object
      properties:
        requestId:
          type: string
        sortIndex:
          type: number
        status:
          $ref: "#/components/schemas/PaymentRequestStatus"
        deliveryDate:
          type: string
        amount:
          type: number
        debtorName:
          type: string
      required:
        - requestId
        - sortIndex
        - status
        - debtorName
      example:
        requestId: request123
        sortIndex: 0
        status: IN_SETTLEMENT
        deliveryDate: 2022-08-11T00:00:00.000Z
        amount: 1040
        debtorName: DHL Supply Chain
    PaymentRequestDetail:
      type: object
      required:
        - requestId
        - status
        - clearingSystem
        - invoiceOrCreditNoteNumber
        - deliveryDate
        - invoiceOrCreditNoteDate
        - amount
        - paymentTerm
        - payoutDate
        - factoringFee
        - payoutAmount
        - documents
        - customerInformation
        - customerContact
      properties:
        requestId:
          type: string
        status:
          $ref: "#/components/schemas/PaymentRequestStatus"
        clearingSystem:
          type: string
          enum:
            - invoice
            - credit_note
        invoiceOrCreditNoteNumber:
          type: string
        deliveryDate:
          type: string
        invoiceOrCreditNoteDate:
          type: string
        amount:
          type: number
        paymentTerm:
          type: number
        payoutDate:
          type: string
        factoringFee:
          type: number
        payoutAmount:
          type: number
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                enum:
                  - invoice
                  - credit_note
                  - proof_of_delivery
              uploadId:
                type: string
              filename:
                type: string
            required:
              - name
              - filename
              - uploadId
        customerInformation:
          $ref: "#/components/schemas/PaymentsCustomerInformation"
        customerContact:
          $ref: "#/components/schemas/PaymentsCustomerContact"
      example:
        requestId: request1234
        clearingSystem: invoice
        status: SOLD
        invoiceOrCreditNoteNumber: 2022-238
        deliveryDate: 2022-08-11T00:00:00.000Z
        invoiceOrCreditNoteDate: 2022-10-11T00:00:00.000Z
        amount: 1040
        paymentTerm: 45
        payoutDate: 2022-11-03T00:00:00.000Z
        factoringFee: 0.015
        payoutAmount: 1003.6
        documents:
          - name: invoice
            filename: Invoice_Wolfrum_2022-283_for_factoring.pdf
            uploadId: up123
          - name: proof_of_delivery
            filename: POD_Wolfrum_2022-283_for_factoring.pdf
            uploadId: up234
        customerInformation:
          companyId: company1
          companyName: DB Schenker
          streetAndNumber: Lyonder Str. 15
          postcode: "60152"
          city: Frankfurt am Main
        customerContact:
          contactId: contact1
          contactName: Michaela Muller
          email: m.mueller@dbschenker.de
          phoneNumber: "+49089386523"
    OrderDetail:
      type: object
      required:
        - orderId
        - status
      properties:
        orderId:
          type: string
        clearingSystem:
          type: string
          enum:
            - invoice
            - credit_note
        status:
          $ref: "#/components/schemas/OrderStatusDetails"
        customerInformation:
          $ref: "#/components/schemas/PaymentsCustomerInformation"
        customerContact:
          $ref: "#/components/schemas/PaymentsCustomerContact"
        customerOrderNumber:
          type: string
        loadingDetails:
          $ref: "#/components/schemas/LoadingDetails"
        unloadingDetails:
          $ref: "#/components/schemas/LoadingDetails"
        loadDescription:
          type: string
        servicesDetails:
          $ref: "#/components/schemas/ServiceDetails"
        stipulations:
          type: array
          items:
            type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                enum:
                  - order
                  - order_confirmation
                  - proof_of_delivery
                  - invoice
                  - credit_note
              uploadId:
                type: string
              filename:
                type: string
            required:
              - name
              - filename
              - uploadId
      example:
        orderId: order1234
        clearingSystem: invoice
        status:
          orderConfirmationDate: 2023-02-01
          orderCompletionDate: 2023-02-04
          invoiceAndOrPodSentDate: 2023-02-04
          creditNoteReceivedDate: 2023-02-05
          paymentReceivedDate: 2023-03-04
        customerInformation:
          companyId: company1
          companyName: DB Schenker
          streetAndNumber: Lyonder Str. 15
          postcode: "60152"
          city: Frankfurt am Main
        customerContact:
          contactId: contact1
          contactName: Michaela Muller
          email: m.mueller@dbschenker.de
          phoneNumber: "+49089386523"
        customerOrderNumber: KN22-6782
        loadingDetails:
          date: 2023-02-04T16:00:00.000Z
          venue:
            venueId: venue12345
            CompanyName: Südost Fruchtkontor
            Street: Luisenstr. 51
            City: München
            PostalCode: "80803"
        unloadingDetails:
          date: 2022-11-03T00:00:00.000Z
          venue:
            venueId: venue12345
            CompanyName: Nordwest Fruchtkontor
            Street: Große Bleichen 33
            City: Hamburg
            PostalCode: "20354"
        loadDescription: 50 Paletten Bananen
        servicesDetails:
          paymentTerm: 45
          currency: EUR
          services:
            - service: Freight transport
              netAmount: 1003.6
            - service: 20x Pallets
              netAmount: 200
        stipulations:
          - This is the first stipulation
          - This is stipulation 2
        documents:
          - name: invoice
            filename: Invoice_Wolfrum_2022-283_for_factoring.pdf
            uploadId: up123
          - name: proof_of_delivery
            filename: POD_Wolfrum_2022-283_for_factoring.pdf
            uploadId: up234
    LoadingDetails:
      type: object
      properties:
        date:
          type: string
        venue:
          $ref: "#/components/schemas/Venue"
      required:
        - date
        - venue
      example:
        date: 2022-11-03T00:00:00.000Z
        venue:
          venueId: venue12345
          CompanyName: Südost Fruchtkontor
          Street: Luisenstr. 51
          City: München
          PostalCode: "80803"
    ServiceDetails:
      type: object
      properties:
        paymentTerm:
          type: integer
        currency:
          type: string
        services:
          type: array
          items:
            type: object
            properties:
              service:
                type: string
              netAmount:
                type: number
            required:
              - service
              - netAmount
      example:
        paymentTerm: 45
        currency: EUR
        services:
          - service: Freight transport
            netAmount: 1003.6
          - service: 20x Pallets
            netAmount: 200
    CompanyName:
      type: object
      properties:
        companyId:
          type: string
        companyName:
          type: string
      required:
        - companyId
        - companyName
    KycBusinessData:
      type: object
      properties:
        addressAddon:
          type: string
        city:
          type: string
        commercialRegisterNumber:
          type: string
        companyName:
          type: string
        country:
          type: string
        legalForm:
          type: string
        phoneNumber:
          type: string
        postcode:
          type: string
        registrationAuthority:
          type: string
        streetAndNumber:
          type: string
        vatId:
          type: string
        businessLicenseUploadId:
          type: string
        businessLicenseFilename:
          type: string
      required:
        - city
        - commercialRegisterNumber
        - companyName
        - country
        - legalForm
        - phoneNumber
        - postcode
        - registrationAuthority
        - streetAndNumber
        - vatId
      example:
        addressAddon: Loft 2
        city: München
        commercialRegisterNumber: HRA162345
        companyName: Monster AG
        country: DE
        legalForm: DE0001
        phoneNumber: "+49123456789"
        postcode: "80333"
        registrationAuthority: RADE0001
        streetAndNumber: Luisenstr. 51
        vatId: DE912345678
        businessLicenseFilename: something.pdf
        businessLicenseUploadId: ABCSDS
    KycBankAccount:
      type: object
      properties:
        authorization:
          type: boolean
        bic:
          type: string
        iban:
          type: string
      required:
        - authorization
        - bic
        - iban
      example:
        bic: SSKMDEMM
        iban: DE89 3704 0044 0532 0130 00
        authorization: true
    VirtualIban:
      type: object
      properties:
        bic:
          type: string
        iban:
          type: string
        recipient:
          type: string
      required:
        - bic
        - iban
        - recipient
      example:
        bic: SSKMDEMM
        iban: DE89 3704 0044 0532 0130 00
        recipient: Wonka Transporte GmbH via Walbing
    KycLegalRepresentatives:
      type: object
      properties:
        areYouLegalRepresentative:
          type: boolean
        powerOfRepresentation:
          type: string
          enum:
            - sole
            - joint
        representatives:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              dob:
                type: string
              language:
                type: string
            required:
              - firstName
              - lastName
              - email
              - dob
              - language
      required:
        - areYouLegalRepresentative
        - powerOfRepresentation
        - representatives
      example:
        areYouLegalRepresentative: true
        powerOfRepresentation: sole
        representatives:
          - firstName: John
            lastName: Gelt
            email: john@galt.com
            dob: 1985-12-27T00:00:00.000Z
            language: en_US
    KycBeneficialOwners:
      type: object
      properties:
        beneficialOwners:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              dob:
                type: string
              placeOfBirth:
                type: string
              nationality:
                type: string
              streetAndNumber:
                type: string
              postcode:
                type: string
              city:
                type: string
              country:
                type: string
            required:
              - firstName
              - lastName
              - dob
              - placeOfBirth
              - nationality
              - streetAndNumber
              - postcode
              - city
              - country
      required:
        - beneficialOwners
      example:
        beneficialOwners:
          - firstName: John
            lastName: Galt
            city: Hamburg
            country: DE
            dob: 1985-12-27T00:00:00.000Z
            nationality: DE
            placeOfBirth: Bremen
            postcode: "20384"
            streetAndNumber: Am Wacker 23
    PaymentsCustomerContact:
      type: object
      properties:
        contactId:
          type: string
        contactName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
      required:
        - contactId
      example:
        contactId: contact1
    PaymentsCustomerInformation:
      type: object
      properties:
        addressAddon:
          type: string
        city:
          type: string
        commercialRegisterNumber:
          type: string
        companyId:
          type: string
        companyName:
          type: string
        country:
          type: string
        legalForm:
          type: string
        postcode:
          type: string
        registrationAuthority:
          type: string
        streetAndNumber:
          type: string
        vatId:
          type: string
      required:
        - companyId
      example:
        companyId: company1
    PaymentsPaymentDetails:
      type: object
      properties:
        clearingSystem:
          type: string
          enum:
            - invoice
            - credit_note
        invoiceOrCreditNoteNumber:
          type: string
        deliveryDate:
          type: string
        invoiceOrCreditNoteDate:
          type: string
        applicableLaw:
          type: string
        paymentTerm:
          type: integer
        amount:
          type: number
      required:
        - clearingSystem
        - invoiceOrCreditNoteNumber
        - deliveryDate
        - invoiceOrCreditNoteDate
        - applicableLaw
        - paymentTerm
        - amount
    PaymentsUploadDocuments:
      type: object
      properties:
        confirmInvoiceHasIban:
          type: boolean
        creditNoteFilename:
          type: string
        creditNoteUploadId:
          type: string
        invoiceFilename:
          type: string
        invoiceUploadId:
          type: string
        proofOfDeliveryFilename:
          type: string
        proofOfDeliveryUploadId:
          type: string
      example:
        confirmInvoiceHasIban: true
        invoiceFilename: invoice-1.pdf
        invoiceUploadId: upload123
        proofOfDeliveryFilename: delivery-2.pdf
        proofOfDeliveryUploadId: upload345
    FileUploadInfoResponse:
      type: object
      properties:
        id:
          type: string
        link:
          type: string
      required:
        - id
        - link
      example:
        id: ABC123
        link: https://truckos-dev-data-documentsbucket9ec9deb9-1dht08po0ke8p.s3.eu-west-1.amazonaws.com/local-dev/saintf/ui/uploads/b05bedf7-f20b-4a0a-9c43-876037f1cda0?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA2EJ4VQTM7BGDS6CJ%2F20230301%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20230301T182802Z&X-Amz-Expires=259200&X-Amz-Signature=fcc168beb97a8223fb509684120489feeb15ef9ffbf4daff940c5c5e615e58be&X-Amz-SignedHeaders=host&x-id=PutObject
    KycStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - Complete
            - Pending
            - InProgress
            - NotStarted
        progress:
          type: integer
          minimum: 1
          maximum: 5
      required:
        - status
  responses:
    400-RejectRequest:
      description: Cannot Fulfill Request
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ClientRequestRejection"
    404-NotFound:
      description: Not found
    405-NotAllowed:
      description: Not Allowed
paths:
  /account:
    post:
      summary: Allocate new account company id
      operationId: createAccountCompanyId
      tags:
        - Account
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountCompanyId:
                    type: string
                required:
                  - accountCompanyId
              example:
                accountCompanyId: account-company-id-123
  "/account/{companyIdParam}":
    get:
      summary: Get account company basic details
      operationId: getCompanyForAccount
      tags:
        - Account
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCompany"
              example:
                companyId: company112
                companyName: Trucking Inc
                availableFeatures:
                  - functionality: ORDER_BOOK
                    status: FEATURE_AVAILABLE
                  - functionality: FACTORING_WALBING
                    status: FEATURE_AVAILABLE
                details:
                  companyType: GermanCompanyDetails
                  address:
                    streetAndNumber: Kehlweg 3
                    city: München
                    postcode: "80333"
                    country: DE
                  legalForm: 2HBR
                  vatId: DE971528659
                  taxId: 123/56/777
                accountCompanyContacts:
                  - contactDetails:
                      email: joe@schmo.com
                      phoneNumber: "+491778569887"
                    includeIn:
                      - outgoingBookkeeping
                accountCompanyBankDetails:
                  iban: DE50500105178341774934
                  bic: BYLADEM1001
                accountCompanyLogo:
                  logoUrl: https://static.vecteezy.com/ti/gratis-vektor/t2/6604979-transport-logo-mit-modernem-und-professionellem-konzept-premium-vektor.jpg
                  mimeType: image/jpeg
    put:
      summary: Update company details
      operationId: updateCompanyDetails
      tags:
        - Account
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCompany"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
  "/account/{companyIdParam}/logo":
    put:
      summary: Request an upload link for the company logo
      operationId: requestCompanyLogoUploadUrl
      tags:
        - Account
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mimeType:
                  type: string
      responses:
        "201":
          description: The company logo upload url
          content:
            application/json:
              schema:
                type: object
                properties:
                  logoUploadLink:
                    type: string
                  mimeType:
                    type: string
    delete:
      summary: Delete the current company logo
      operationId: deleteCurrentCompanyLogo
      tags:
        - Account
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The Logo successfully removed
  "/ref-data/legal-forms/{countryCode}":
    get:
      summary: Get the legal forms for a country code
      operationId: getLegalForms
      tags:
        - RefData
      parameters:
        - name: countryCode
          in: path
          description: Country code
          required: true
          schema:
            type: string
            maxLength: 2
            minLength: 2
        - name: availableForTrader
          in: query
          description: Filter by availableForTrader
          schema:
            type: boolean
        - name: availableForDebtor
          in: query
          description: Filter by availableForDebtor
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LegalForm"
              examples:
                jsonObject:
                  value:
                    - elfCode: 2HBR
                      name: GmbH
                    - elfCode: XXXX0001
                      name: GmbH & Co. KG
                    - elfCode: 63KS
                      name: UG
                    - elfCode: 6QQB
                      name: Aktiengesellschaft
                    - elfCode: T0YJ
                      name: Kommanditgesellschaft auf Aktien
                    - elfCode: QZ3L
                      name: eingetragener Verein
                    - elfCode: SGST
                      name: SE (Europäische Aktiengesellschaft)
                    - elfCode: US8E
                      name: Genossenschaft
                    - elfCode: XXXX0002
                      name: Anstalt des öffentlichen Rechts
                    - elfCode: 40DB
                      name: Offene Handelsgesellschaft
                    - elfCode: 8Z6G
                      name: Kommanditgesellschaft
                    - elfCode: XXXX0003
                      name: SE & Co. KGaA
                    - elfCode: SUA1
                      name: Europäische Genossenschaft
                    - elfCode: 13AV
                      name: Versicherungsverein auf Gegenseitigkeit
                    - elfCode: DE0001
                      name: Einzelunternehmen
                    - elfCode: DE0002
                      name: GbR
                    - elfCode: DE0003
                      name: e. K.
                    - elfCode: DE0004
                      name: SE & Co. KG
                    - elfCode: DE0005
                      name: Stiftung & Co. KG
  /ref-data/countries:
    get:
      summary: Get country codes
      operationId: getCountries
      tags:
        - RefData
      parameters:
        - name: forDebtor
          in: query
          description: Filter by forDebtor
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
              examples:
                jsonObject:
                  value:
                    - code: EE
                    - code: NL
                    - code: SK
                    - code: BG
                    - code: AU
                    - code: CH
                    - code: CZ
                    - code: PL
                    - code: CL
                    - code: BE
                    - code: AT
                    - code: HK
                    - code: NZ
                    - code: HU
                    - code: GB
                    - code: ES
                    - code: NO
                    - code: BR
                    - code: SG
                    - code: ZA
                    - code: CO
                    - code: IE
                    - code: LI
                    - code: GR
                    - code: DK
                    - code: TH
                    - code: DE
                    - code: CN
                    - code: MX
                    - code: US
                    - code: MT
                    - code: RO
                    - code: IT
                    - code: LT
                    - code: CY
                    - code: SI
                    - code: PT
                    - code: FI
                    - code: TR
                    - code: HR
                    - code: FR
                    - code: LV
                    - code: CA
                    - code: MC
                    - code: LU
                    - code: MY
                    - code: SE
  "/ref-data/register-authorities/{countryCode}":
    get:
      summary: Get the register authorities for a country code
      operationId: getRegisterAuthorities
      tags:
        - RefData
      parameters:
        - name: countryCode
          in: path
          description: Country code
          required: true
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegisterAuthority"
              examples:
                jsonObject:
                  value:
                    - registerAuthorityCode: RA000197
                      name: Amtsgericht Aachen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000198
                      name: Amtsgericht Ahlen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000199
                      name: Amtsgericht Altenburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000200
                      name: Amtsgericht Amberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000201
                      name: Amtsgericht Ansbach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000202
                      name: Amtsgericht Apolda
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000203
                      name: Amtsgericht Arnsberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000204
                      name: Amtsgericht Arnstadt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000205
                      name: Amtsgericht Aschaffenburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000206
                      name: Amtsgericht Augsburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000207
                      name: Amtsgericht Aurich
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000208
                      name: Amtsgericht Bad Hersfeld
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000209
                      name: Amtsgericht Bad Homburg v. d. Höhe
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000210
                      name: Amtsgericht Bad Kreuznach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000212
                      name: Amtsgericht Bad Lobenstein
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000213
                      name: Amtsgericht Bad Oeynhausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000214
                      name: Amtsgericht Bad Salzungen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000215
                      name: Amtsgericht Bamberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000216
                      name: Amtsgericht Bayreuth
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000217
                      name: Amtsgericht Berlin-Charlottenburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000218
                      name: Amtsgericht Bielefeld
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000219
                      name: Amtsgericht Bochum
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000220
                      name: Amtsgericht Bonn
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000221
                      name: Amtsgericht Braunschweig
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000222
                      name: Amtsgericht Bremen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000223
                      name: Amtsgericht Bünde
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000224
                      name: Amtsgericht Chemnitz
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000225
                      name: Amtsgericht Coburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000226
                      name: Amtsgericht Coesfeld
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000227
                      name: Amtsgericht Cottbus
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000228
                      name: Amtsgericht Darmstadt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000229
                      name: Amtsgericht Deggendorf
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000230
                      name: Amtsgericht Dortmund
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000231
                      name: Amtsgericht Dresden
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000232
                      name: Amtsgericht Duisburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000233
                      name: Amtsgericht Düren
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000234
                      name: Amtsgericht Düsseldorf
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000235
                      name: Amtsgericht Eisenach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000236
                      name: Amtsgericht Erfurt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000238
                      name: Amtsgericht Eschwege
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000239
                      name: Amtsgericht Essen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000240
                      name: Amtsgericht Flensburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000241
                      name: Amtsgericht Frankfurt/Oder
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000242
                      name: Amtsgericht Frankfurt am Main
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000243
                      name: Amtsgericht Freiburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000244
                      name: Amtsgericht Friedberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000245
                      name: Amtsgericht Fritzlar
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000246
                      name: Amtsgericht Fulda
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000247
                      name: Amtsgericht Fürth
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000248
                      name: Amtsgericht Geldern
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000249
                      name: Amtsgericht Gelsenkirchen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000250
                      name: Amtsgericht Gera
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000251
                      name: Amtsgericht Gießen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000252
                      name: Amtsgericht Gotha
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000253
                      name: Amtsgericht Göttingen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000255
                      name: Amtsgericht Greiz
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000257
                      name: Amtsgericht Gütersloh
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000258
                      name: Amtsgericht Hagen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000259
                      name: Amtsgericht Hamburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000260
                      name: Amtsgericht Hamm
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000261
                      name: Amtsgericht Hanau
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000262
                      name: Amtsgericht Hannover
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000263
                      name: Amtsgericht Heilbad Heiligenstedt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000266
                      name: Amtsgericht Hildburghausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000267
                      name: Amtsgericht Hildesheim
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000268
                      name: Amtsgericht Hof
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000269
                      name: Amtsgericht Homburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000270
                      name: Amtsgericht Ilmenau
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000271
                      name: Amtsgericht Ingolstadt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000272
                      name: Amtsgericht Iserlohn
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000273
                      name: Amtsgericht Jena
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000274
                      name: Amtsgericht Kaiserslautern
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000275
                      name: Amtsgericht Kassel
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000276
                      name: Amtsgericht Kempten
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000277
                      name: Amtsgericht Kiel
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000278
                      name: Amtsgericht Kleve
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000279
                      name: Amtsgericht Koblenz
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000280
                      name: Amtsgericht Köln
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000281
                      name: Amtsgericht Königstein
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000282
                      name: Amtsgericht Korbach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000283
                      name: Amtsgericht Krefeld
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000284
                      name: Amtsgericht Landau
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000285
                      name: Amtsgericht Landshut
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000286
                      name: Amtsgericht Lebach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000287
                      name: Amtsgericht Leipzig
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000288
                      name: Amtsgericht Lemgo
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000289
                      name: Amtsgericht Limburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000290
                      name: Amtsgericht Lübeck
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000291
                      name: Amtsgericht Ludwigshafen am Rhein
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000292
                      name: Amtsgericht Ludwigslust
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000293
                      name: Amtsgericht Lüneburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000294
                      name: Amtsgericht Lünen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000295
                      name: Amtsgericht Mainz
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000296
                      name: Amtsgericht Mannheim
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000297
                      name: Amtsgericht Marburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000298
                      name: Amtsgericht Meiningen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000299
                      name: Amtsgericht Memmingen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000300
                      name: Amtsgericht Merzig
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000301
                      name: Amtsgericht Mönchengladbach
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000302
                      name: Amtsgericht Montabaur
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000303
                      name: Amtsgericht Mühlhausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000304
                      name: Amtsgericht München
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000305
                      name: Amtsgericht Münster
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000306
                      name: Amtsgericht Neubrandenburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000307
                      name: Amtsgericht Neunkirchen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000308
                      name: Amtsgericht Neuruppin
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000309
                      name: Amtsgericht Neuss
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000310
                      name: Amtsgericht Nordhausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000311
                      name: Amtsgericht Nürnberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000313
                      name: Amtsgericht Offenbach am Main
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000314
                      name: Amtsgericht Oldenburg (Oldenburg)
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000315
                      name: Amtsgericht Osnabrück
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000316
                      name: Amtsgericht Ottweiler
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000317
                      name: Amtsgericht Paderborn
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000319
                      name: Amtsgericht Passau
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000320
                      name: Amtsgericht Pinneberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000321
                      name: Amtsgericht Pößneck
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000322
                      name: Amtsgericht Potsdam
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000324
                      name: Amtsgericht Recklinghausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000325
                      name: Amtsgericht Regensburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000328
                      name: Amtsgericht Rostock
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000329
                      name: Amtsgericht Rudolfstadt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000330
                      name: Amtsgericht Saalfeld
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000331
                      name: Amtsgericht Saarbrücken
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000332
                      name: Amtsgericht Sarlouis
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000333
                      name: Amtsgericht St. Ingbert
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000334
                      name: Amtsgericht St. Wendel
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000336
                      name: Amtsgericht Schweinfurt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000337
                      name: Amtsgericht Schwerin
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000338
                      name: Amtsgericht Siegburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000339
                      name: Amtsgericht Siegen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000340
                      name: Amtsgericht Soest
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000341
                      name: Amtsgericht Solingen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000342
                      name: Amtsgericht Sömmerda
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000343
                      name: Amtsgericht Sondershausen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000344
                      name: Amtsgericht Sonneberg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000345
                      name: Amtsgericht Stadthagen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000346
                      name: Amtsgericht Stadtroda
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000347
                      name: Amtsgericht Steinfurt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000348
                      name: Amtsgericht Stendal
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000349
                      name: Amtsgericht Stralsund
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000350
                      name: Amtsgericht Straubing
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000351
                      name: Amtsgericht Stuttgart
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000352
                      name: Amtsgericht Suhl
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000353
                      name: Amtsgericht Tostedt
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000354
                      name: Amtsgericht Traunstein
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000355
                      name: Amtsgericht Ulm
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000356
                      name: Amtsgericht Völklingen
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000358
                      name: Amtsgericht Walsrode
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000360
                      name: Amtsgericht Waren
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000362
                      name: Amtsgericht Weiden
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000363
                      name: Amtsgericht Weimar
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000364
                      name: Amtsgericht Wetzlar
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000365
                      name: Amtsgericht Wiesbaden
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000368
                      name: Amtsgericht Wittlich
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000369
                      name: Amtsgericht Wuppertal
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000370
                      name: Amtsgericht Würzburg
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RA000371
                      name: Amtsgericht Zweibrücken
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
                    - registerAuthorityCode: RADE0001
                      name: Gewerbeamt
                      registrationNumberRequirement: OPTIONAL
                      registrationDocumentRequirement: REQUIRED
                    - registerAuthorityCode: TB000001
                      name: Anstalt des öffentlichen Rechts
                      registrationNumberRequirement: REQUIRED
                      registrationDocumentRequirement: OPTIONAL
  /account/company/search:
    get:
      summary: Perform a system-wide Company search
      description: Perform a system-wide Company search. This one may hit external
        systems in which case the 'companyId' will be empty.
      operationId: globalCompanySearch
      tags:
        - Search
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Perform a partial search based on the Company Name, VAT ID or a
            Registration Number. This parameter must contain at least 3
            characters.
          example: HRA162
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanySummaryList"
  "/account/{companyId}/customer":
    get:
      summary: Get the list of previous customer company names and ids
      operationId: getPreviousCustomers
      tags:
        - Customer
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanySummaryList"
              examples:
                jsonObject:
                  value:
                    - companyId: company1
                      companyName: Monster AG
                    - companyId: company2
                      companyName: Awesome Company
                    - companyId: company3
                      companyName: Trucking R Us
    post:
      summary: Create a new Customer
      operationId: createNewCustomer
      tags:
        - Customer
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/CustomerCompany"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  customerCompany:
                    $ref: "#/components/schemas/CustomerCompany"
        "400":
          $ref: "#/components/responses/400-RejectRequest"
  "/account/{companyIdParam}/customer/{customerIdParam}":
    get:
      summary: Get Customer Company Details
      operationId: getCustomer
      tags:
        - Customer
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: customerIdParam
          in: path
          description: Customer id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCompany"
  "/account/{companyIdParam}/customer/{customerIdParam}/contact":
    get:
      summary: Get Customer Contacts
      operationId: getCustomerContacts
      tags:
        - Customer
        - Contact
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: customerIdParam
          in: path
          description: Customer id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomerCompanyContact"
    post:
      summary: Create a new Customer Contact
      operationId: createNewPrivateCustomerContact
      tags:
        - Customer
        - Contact
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: customerIdParam
          in: path
          description: Customer id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCompanyContact"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCompanyContact"
        "400":
          $ref: "#/components/responses/400-RejectRequest"
  "/account/{companyIdParam}/customer/{customerIdParam}/contact/{contactIdParam}":
    put:
      summary: Update Customer Contact
      operationId: updatePrivateCustomerContact
      tags:
        - Customer
        - Contact
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: customerIdParam
          in: path
          description: Customer id
          required: true
          schema:
            type: string
        - name: contactIdParam
          in: path
          description: Contact id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCompanyContact"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCompanyContact"
        "400":
          $ref: "#/components/responses/400-RejectRequest"
    get:
      summary: Get Customer Contact
      operationId: getCustomerContact
      tags:
        - Customer
        - Contact
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: customerIdParam
          in: path
          description: Customer id
          required: true
          schema:
            type: string
        - name: contactIdParam
          in: path
          description: Contact id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCompanyContact"
  "/account/{companyIdParam}/order":
    description: Dealing with orders - big-picture
    get:
      summary: Get the order list
      operationId: getOrdersList
      tags:
        - Order
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderAsOfTime
          in: query
          description: Timestamp to load the orders as of
          required: true
          schema:
            $ref: "#/components/schemas/date-time"
        - name: search
          in: query
          description: Text search value
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: Number of orders to load
          required: true
          schema:
            type: number
        - name: offset
          in: query
          description: The index to load from
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnd:
                    type: boolean
                  userHasOrders:
                    type: boolean
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderSummary"
              example:
                isEnd: false
                userHasOrders: true
                orders:
                  - orderId: order111
                    sortIndex: 0
                    status: CREATED
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    currency: EUR
                    amount: "1040"
                    customerName: DHL Supply Chain
                    workflowAvailableActions:
                      - UploadOrder
                      - SendOrderConfirmation
                      - UploadProofOfDelivery
                  - orderId: order112
                    sortIndex: 1
                    status: PAID
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    currency: EUR
                    amount: "1089"
                    customerName: DHL Supply Chain
                  - orderId: order114
                    sortIndex: 2
                    status: DELIVERED
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    currency: EUR
                    amount: "1122.90"
                    customerName: Hans Wormser AG
                    workflowAvailableActions:
                      - UploadOrder
                      - SendInvoice
                      - RecordPayment
                  - orderId: order115
                    sortIndex: 3
                    status: IN_COLLECTION
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    currency: EUR
                    amount: "922.80"
                    customerName: Dachser SE
                    workflowAvailableActions:
                      - RecordPayment
                  - orderId: order116
                    sortIndex: 4
                    status: OVERDUE
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    currency: EUR
                    amount: "722.80"
                    customerName: DB Schenker
                    workflowAvailableActions:
                      - RecordPayment
    post:
      summary: Create a new order
      operationId: createNewOrder
      tags:
        - Order
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
              properties:
                customerId:
                  type: string
                contacts:
                  type: object
                  properties:
                    dispositionContact:
                      $ref: "#/components/schemas/CustomerCompanyContact"
                    bookkeepingContact:
                      $ref: "#/components/schemas/CustomerCompanyContact"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  orderId:
                    type: string
                  orderVersion:
                    type: number
                required:
                  - orderId
                  - orderVersion
                example:
                  orderId: order1
                  orderVersion: 1
        "400":
          $ref: "#/components/responses/400-RejectRequest"
  "/account/{companyIdParam}/order/{orderIdParam}":
    description: Get/etc everything to do with an 'existing' order. (existing just
      means we have an ID for it - not necessarily anything else)
    delete:
      summary: Archive an order
      operationId: archiveOrder
      tags:
        - Order
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderIdParam
          in: path
          description: Order id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "404":
          $ref: "#/components/responses/404-NotFound"
        "409":
          $ref: "#/components/responses/405-NotAllowed"
    get:
      summary: Get order details
      operationId: getOrder
      tags:
        - Order
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderIdParam
          in: path
          description: Order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      summary: Update Order
      description: Will update items that are allowed in the order (like order
        details, or the clearing type in workflow). Since the other items (such
        as files, workflow steps or status) are either calculated or managed by
        the system, any value in these will be ignored and not used. If the
        update is on an allowed field, but other issues (like duplicate or
        updating that field in the current stage of the workflow) will result in
        the update being rejected.
      tags:
        - Order
      operationId: updateOrder
      parameters:
        - name: companyIdParam
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderIdParam
          in: path
          description: Order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
              example: true
        "400":
          $ref: "#/components/responses/400-RejectRequest"
        "404":
          $ref: "#/components/responses/404-NotFound"
  "/account/{companyId}/order/{orderId}/payment":
    post:
      summary: Confirm payment received
      description: Confirm that the order was payed by this Carrier's Customer. This
        endpoint finalizes the order and successfuly closes it.
      operationId: confirmPaymentReceived
      tags:
        - Order
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderPaymentReceiptInfo"
      responses:
        "200":
          description: The order payment receipt has been successfully recorded and the
            order has been finalized. Great job!
  "/account/{companyId}/order/{orderId}/document/upload":
    post:
      summary: Allocate new upload link
      description: This endpoint allocates a new link that you can use to upload the
        content of a document. Afterwards when content is uploaded you need to
        confirm upload success by calling the PUT
        /account/{companyId}/order/{orderId}/document/{documentId} endpoint with
        the uploadId from this endpoint's response. This is related to the fact
        that the aforementioned link can be used multiple times to upload a
        file. The system wouldn't know when upload is done if the success is not
        confirmed by the user.
      operationId: getUploadLink
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/FileMetadata"
                - type: object
                  required:
                    - documentType
                  properties:
                    documentType:
                      $ref: "#/components/schemas/UploadableDocumentTypes"
              example:
                documentType: CREDIT_NOTE
                fileName: TruckOS-Credit-Note.pdf
                contentType: application/pdf
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadFileLink"
        "400":
          $ref: "#/components/responses/400-RejectRequest"
        "404":
          $ref: "#/components/responses/404-NotFound"
  "/account/{companyId}/order/{orderId}/document/generate":
    post:
      summary: Generate a document using information in the system.
      description: Request a document generation of a specific type of document. Each
        document requires different data set so preliminary data validation will
        be done on the API call. In case of errors api would return a 400 BAD
        REQUEST. It is currently possible to generate only an Order Confirmation
        or an Invoice.
      operationId: generateDocument
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documentType
              properties:
                documentType:
                  $ref: "#/components/schemas/GeneratedDocumentType"
                invoiceNumber:
                  type: string
              example:
                documentType: INVOICE
                invoiceNumber: RN2023/17
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentId:
                    type: string
              example:
                documentId: company-123-order-321-KN22-6782-invoice-321
        "400":
          $ref: "#/components/responses/400-RejectRequest"
        "404":
          $ref: "#/components/responses/404-NotFound"
  "/account/{companyId}/order/{orderId}/document/{documentId}":
    get:
      summary: Get a download link for the document
      operationId: getDownloadLink
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The comprehensive information for downloading, parsing and reading
            the document is provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadFileLink"
              example:
                documentMetadata:
                  fileName: TruckOS-Special-Conditions-DE.pdf
                  contentType: application/pdf
                url: /files/TruckOS-Special-Conditions-DE.pdf
                expires: 2023-02-16T12:00:00.000Z
        "404":
          $ref: "#/components/responses/404-NotFound"
    put:
      summary: Complete an uploadId
      description: Confirms a document upload is finished and successful.
      operationId: confirmUpload
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: Document id
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                creditNoteDate:
                  $ref: "#/components/schemas/date-time"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
              example: true
        "400":
          $ref: "#/components/responses/400-RejectRequest"
        "404":
          $ref: "#/components/responses/404-NotFound"
    delete:
      summary: Delete a document by id
      operationId: deleteDocumentById
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: Document id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The deletion is successful.
          content:
            application/json:
              schema:
                type: boolean
              example: true
  "/account/{companyId}/order/{orderId}/document/send":
    post:
      summary: Send a document via predefined channel
      description: Send a document with a particular type via a predefined channel.
        The channel highly depends on the document type itself such as an
        invoice could be currently sent only via email and only to the Freight
        Forwarder's disposition email selected on the contacts selection screen.
      operationId: sendDocumentByType
      tags:
        - OrderDocuments
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Used to confirm the document type of the target document that user
          intends to send.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendDocument"
      responses:
        "201":
          description: The send request has been accepted by the system and will processed
            asynchronously.
          content:
            application/json:
              schema:
                type: boolean
              example: true
  "/account/{companyId}/order/{orderId}/share":
    post:
      summary: Share the order summary
      description: Share basic information such as order number, loading and unloading
        venues with the given recipient.
      tags:
        - Order
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderSharingInfo"
      responses:
        "202":
          description: The request to share has been accepted and will be processed
            accordingly.
          content:
            application/json:
              schema:
                type: boolean
              example: true
  /user:
    get:
      summary: Get the user details for the logged in user
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                userId: user123
                email: johngalt123@truck-os.de
                firstName: John
                lastName: Galt
                language: de-DE
                profileStatus: COMPLETE
                companies:
                  - companyId: company-id-444
                    companyName: Galt Transporte
                    availableFeatures:
                      - functionality: ORDER_BOOK
                        status: FEATURE_AVAILABLE
                      - functionality: FACTORING_WALBING
                        status: FEATURE_FORBIDDEN
        "404":
          description: Not found
    put:
      summary: Submit new user data. Certain fields will be ignored depending on
        KYC/etc.
      operationId: updateUserData
      requestBody:
        description: user data
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
              example: true
        "400":
          $ref: "#/components/responses/400-RejectRequest"
  /company/previous-companies:
    get:
      summary: Get the list of previous company names and ids
      operationId: getPreviousCompanies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompanyName"
              examples:
                jsonObject:
                  value:
                    - companyId: company1
                      companyName: Monster AG
                    - companyId: company2
                      companyName: Awesome Company
                    - companyId: company3
                      companyName: Trucking R Us
  "/company/{companyId}":
    get:
      summary: Get company basic details
      operationId: getCompany
      tags:
        - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
  /file-upload:
    post:
      summary: Get a file upload id and link
      operationId: getFileUploadInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                contentType:
                  type: string
              required:
                - filename
                - contentType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadInfoResponse"
  "/file-download/{id}":
    get:
      summary: Get a download url for the upload id provided
      operationId: getDownloadLink
      parameters:
        - name: id
          in: path
          description: Upload id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploadId:
                    type: string
                  filename:
                    type: string
                  url:
                    type: string
                required:
                  - uploadId
                  - filename
                  - url
                example:
                  uploadId: upload123
                  filename: TruckOS-Special-Conditions-DE.pdf
                  url: /files/TruckOS-Special-Conditions-DE.pdf
  /admin/companies:
    get:
      summary: Get all companies registered in TOS
      operationId: getAllCompanies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnd:
                    type: boolean
                  companies:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegisteredCompany"
                required:
                  - companies
                  - isEnd
                example:
                  isEnd: false
                  companies:
                    - companyId: company1
                      companyName: Monster AG
                      kycStatus: complete
                    - companyId: company2
                      companyName: Awesome Company
                      kycStatus: complete
                    - companyId: company3
                      companyName: ABC GmbH
                      kycStatus: complete
        "204":
          description: No-content
  /admin/attached-companies:
    get:
      summary: Get attached companies
      operationId: getAttachedCompanies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnd:
                    type: boolean
                  attachedCompanies:
                    type: array
                    items:
                      $ref: "#/components/schemas/AttachedCompany"
                required:
                  - attachedCompanies
                  - isEnd
                example:
                  isEnd: false
                  attachedCompanies:
                    - companyId: company1
                      companyName: Monster AG
                      attachedUntil: 2023-04-30T00:00:00.000Z
                      role: support_admin
                    - companyId: company2
                      companyName: Awesome Company
                      attachedUntil: 2023-08-31T00:00:00.000Z
                      role: support_admin
        "204":
          description: No-content
  "/admin/attached-company/{companyId}":
    post:
      summary: Attach company to the user
      operationId: attachCompany
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        description: attach data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - attachedUntil
              properties:
                attachedUntil:
                  type: string
                role:
                  type: string
                  enum:
                    - beneficial_owner
                    - support_admin
                    - finance
                    - driver
                    - legal_representative
              example:
                attachedUntil: 2023-04-30T00:00:00.000Z
                role: support_admin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
    delete:
      summary: Attach company to the user
      operationId: removeAttachedCompany
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "404":
          description: Not found
        "409":
          description: Cannot delete
  /kyc/new:
    get:
      summary: Get a new kyc company id
      operationId: getNewKycCompanyId
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
              example:
                id: kyc-abc-123
  "/kyc/{companyId}":
    get:
      summary: Get the status of the kyc flow
      operationId: getKycWorkflowStatus
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowStatus"
              example:
                status: in_progress
                progress: 2
        "204":
          description: No-content
  "/kyc/{companyId}/business-data":
    get:
      summary: Get the business data form along with already submitted form entries
      operationId: getKycBusinessDataFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KycBusinessData"
        "204":
          description: No-content
    post:
      summary: Submit business data form values
      operationId: postKycBusinessDataForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/KycBusinessData"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/kyc/{companyId}/bank-account":
    get:
      summary: Get the bank account form along with already submitted form entries
      operationId: getKycBankAccountFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KycBankAccount"
        "204":
          description: No-content
    post:
      summary: Submit bank account form values
      operationId: postKycBankAccountForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/KycBankAccount"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  /kyc/virtual-iban:
    get:
      summary: Get the virtual iban data from Walbing api
      operationId: getKycVirtualIban
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualIban"
        "204":
          description: No-content
  "/kyc/{companyId}/legal-representatives":
    get:
      summary: Get the legal representatives form along with already submitted form
        entries
      operationId: getKycLegalRepresentativesFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KycLegalRepresentatives"
        "204":
          description: No-content
    post:
      summary: Submit legal representatives form values
      operationId: postKycLegalRepresentativesForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/KycLegalRepresentatives"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/kyc/{companyId}/beneficial-owners":
    get:
      summary: Get the beneficial owners form along with already submitted form entries
      operationId: getKycBeneficialOwnersFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KycBeneficialOwners"
        "204":
          description: No-content
    post:
      summary: Submit beneficial owners form values
      operationId: postKycBeneficialOwnersForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/KycBeneficialOwners"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/company/{companyId}/account-details":
    get:
      summary: Get the company account details
      operationId: getCompanyAccountDetails
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyAccountDetails"
        "204":
          description: No content
  "/company/{companyId}/create-payment/new":
    get:
      summary: Get a new payment workflow id
      operationId: getNewPaymentWorkflowId
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                required:
                  - id
              example:
                id: payment-abc-123
  "/company/{companyId}/create-payment/{paymentId}":
    get:
      summary: Get the payment workflow data for the id
      operationId: getPaymentWorkflowStatus
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowStatus"
              example:
                progress: 0
                status: new
        "204":
          description: No-content
  "/company/{companyId}/create-payment/{paymentId}/customer-information":
    get:
      summary: Get the customer information form along with already submitted form
        entries
      operationId: getPaymentsCustomerInformationFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentsCustomerInformation"
        "204":
          description: No-content
    post:
      summary: Submit customer information form values
      operationId: postPaymentsCustomerInformationForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/PaymentsCustomerInformation"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/company/{companyId}/create-payment/{paymentId}/customer-contact":
    get:
      summary: Get the customer contact form along with already submitted form entries
      operationId: getPaymentsCustomerContactFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentsCustomerContact"
        "204":
          description: No-content
    post:
      summary: Submit customer contact form values
      operationId: postPaymentsCustomerContactForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/PaymentsCustomerContact"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/company/{companyId}/create-payment/{paymentId}/payment-details":
    get:
      summary: Get the payment details form along with already submitted form entries
      operationId: getPaymentsPaymentDetailsFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentsPaymentDetails"
              example:
                clearingSystem: invoice
                invoiceOrCreditNoteNumber: 2022-238
                deliveryDate: 2022-08-11T00:00:00.000Z
                invoiceOrCreditNoteDate: 2022-10-11T00:00:00.000Z
                applicableLaw: DE
                paymentTerm: 45
                amount: 1325.45
        "204":
          description: No-content
    post:
      summary: Submit payment details form values
      operationId: postPaymentsPaymentDetailsForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/PaymentsPaymentDetails"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/company/{companyId}/create-payment/{paymentId}/upload-documents":
    get:
      summary: Get the upload documents form along with already submitted form entries
      operationId: getPaymentsUploadDocumentsFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentsUploadDocuments"
        "204":
          description: No-content
    post:
      summary: Submit upload documents form values
      operationId: postPaymentsUploadDocumentsForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      requestBody:
        description: The form data
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - form
              properties:
                form:
                  $ref: "#/components/schemas/PaymentsUploadDocuments"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
        "400":
          description: Invalid form data
  "/company/{companyId}/create-payment/{paymentId}/confirmation":
    get:
      summary: Get the final confirmation form data
      operationId: getPaymentsConfirmationFormInit
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequestDetail"
              example:
                requestId: request1234
                clearingSystem: invoice
                status: DRAFT
                invoiceOrCreditNoteNumber: 2022-238
                deliveryDate: 2022-08-11T00:00:00.000Z
                invoiceOrCreditNoteDate: 2022-10-11T00:00:00.000Z
                amount: 1040
                paymentTerm: 45
                payoutDate: 2022-11-03T00:00:00.000Z
                factoringFee: 0.015
                payoutAmount: 1003.6
                documents:
                  - name: invoice
                    filename: Invoice_Wolfrum_2022-283_for_factoring.pdf
                    uploadId: up123
                  - name: proof_of_delivery
                    filename: POD_Wolfrum_2022-283_for_factoring.pdf
                    uploadId: up234
                customer:
                  companyId: company1
                  companyName: DB Schenker
                  streetAndNumber: Lyonder Str. 15
                  postcode: "60152"
                  city: Frankfurt am Main
                  contactId: contact1
                  contactName: Michaela Muller
                  email: m.mueller@dbschenker.de
                  phoneNumber: "+49089386523"
        "204":
          description: No-content
    post:
      summary: Submit confirmation form values
      operationId: postPaymentsConfirmationForm
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Payment id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                confirm:
                  type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                example: true
  "/company/{companyId}/payments/balances":
    get:
      summary: Get the account payment balances
      operationId: getPaymentBalances
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentBalances"
  "/company/{companyId}/payments/list":
    get:
      summary: Get the payments list
      operationId: getPaymentsList
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: fromTime
          in: query
          description: Timestamp to load the payments from
          required: true
          schema:
            type: number
        - name: count
          in: query
          description: Number of payments to load
          required: true
          schema:
            type: number
        - name: search
          in: query
          description: Text search value
          required: false
          schema:
            type: string
        - name: index
          in: query
          description: The index to load from
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isEnd:
                    type: boolean
                  userHasRequests:
                    type: boolean
                  requests:
                    type: array
                    items:
                      $ref: "#/components/schemas/PaymentRequestSummary"
                required:
                  - isEnd
                  - userHasRequests
                  - requests
              example:
                isEnd: false
                userHasRequests: true
                requests:
                  - requestId: request111
                    sortIndex: 0
                    status: IN_SETTLEMENT
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    amount: 1040
                    debtorName: DHL Supply Chain
                  - requestId: request112
                    sortIndex: 1
                    status: DRAFT
                    amount: 1089
                    debtorName: DHL Supply Chain
                  - requestId: request114
                    sortIndex: 2
                    status: REVOKED
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    amount: 1000
                    debtorName: DHL Supply Chain
                  - requestId: request115
                    sortIndex: 3
                    status: IN_COLLECTION
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    amount: 1040
                    debtorName: DHL Supply Chain
                  - requestId: request116
                    sortIndex: 4
                    status: PAID_TO_CARRIER
                    deliveryDate: 2022-08-11T00:00:00.000Z
                    amount: 1040
                    debtorName: DB Schenker
  "/company/{companyId}/payment/{requestId}":
    delete:
      summary: Delete the payment request
      operationId: deletePaymentRequest
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: requestId
          description: Request id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK
        "404":
          description: Not found
        "409":
          description: Cannot delete
    get:
      summary: Get the payment request details
      operationId: getPaymentRequest
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: requestId
          description: Request id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentRequestDetail"
        "404":
          description: Not found
  "/company/{companyId}/create-order/{orderId}":
    get:
      summary: Get the order workflow data for the id
      operationId: getOrderWorkflowStatus
      parameters:
        - name: companyId
          in: path
          description: Company id
          required: true
          schema:
            type: string
        - name: orderId
          in: path
          description: Order id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowStatus"
              example:
                progress: 0
                status: new
        "204":
          description: No-contents
  /ref-data/company-names:
    get:
      summary: Get the list of company names and ids
      operationId: getCompanyNames
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompanyName"
              examples:
                jsonObject:
                  value:
                    - companyId: company1
                      companyName: Monster AG
                    - companyId: company2
                      companyName: Awesome Company
                    - companyId: company3
                      companyName: Trucking R Us
                    - companyId: company4
                      companyName: A to B By Truck
                    - companyId: company5
                      companyName: Müller Transporte GmbH
                    - companyId: company5
                      companyName: Schmidt Baustoffe AG
